[{"categories":["实验"],"content":" quote note abstract info tip success question warning failure danger bug example quote 信息 当你运行 hugo server 时，当文件内容更改时，页面会随着更改自动刷新。 This is a tip 一个 技巧 横幅 技巧 一个 技巧 横幅 注意 一个 注意 横幅 摘要 一个 摘要 横幅 信息 一个 信息 横幅 成功 一个 成功 横幅 问题 一个 问题 横幅 警告 一个 警告 横幅 失败 一个 失败 横幅 危险 一个 危险 横幅 Bug 一个 Bug 横幅 示例 一个 示例 横幅 引用 一个 引用 横幅 这是一段普通的文本 这是一级标题 ","date":"2023-03-22","objectID":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/:0:0","tags":["测试"],"title":"测试post文档创建","uri":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/"},{"categories":["实验"],"content":"这是二级标题 ","date":"2023-03-22","objectID":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/:1:0","tags":["测试"],"title":"测试post文档创建","uri":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/"},{"categories":["实验"],"content":"这是三级标题 这是四级标题 这是五级标题 这是六级标题 ddd 1 2 这是六级标题 😂 [Hugo]^(一个开源的静态网站生成工具） foo bar {#test-id .text-danger} ","date":"2023-03-22","objectID":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/:1:1","tags":["测试"],"title":"测试post文档创建","uri":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/"},{"categories":["实验"],"content":"h2 标题 ","date":"2023-03-22","objectID":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/:2:0","tags":["测试"],"title":"测试post文档创建","uri":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/"},{"categories":["实验"],"content":"h3 标题 h4 标题 h5 标题 h6 标题 \u003e foo \u003e bar {#test-id .text-danger} ","date":"2023-03-22","objectID":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/:2:1","tags":["测试"],"title":"测试post文档创建","uri":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/"},{"categories":["实验"],"content":"11111 ","date":"2023-03-22","objectID":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/:3:0","tags":["测试"],"title":"测试post文档创建","uri":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/"},{"categories":["实验"],"content":"222 Bitwarden最全使用手册 简介： ◎ Bitwarden 是一个开源的密码管理系统，你可以使用 Bitwarden 官方提供的云服务，也可以将 Bitwarden 安装和托管在自己的服务器上。 描述： ◎ 点击左上角三道横线可选择分类目录。 ◎ 胖虎亲测好用，建议耐心看完手册。 下载： Windows 🍏macOS 🔄 Extensions Android 🍏ios 🧭 官网下载 ","date":"2023-03-22","objectID":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/:4:0","tags":["测试"],"title":"测试post文档创建","uri":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/"},{"categories":["实验"],"content":"😀已收录至实用教程合集 😀频道资源合集目录 🏷#教程 ♉ ♈ 📳 🦀 😆 😊 😃 🤣 😋 😍 😅 😎 😜 😆 ","date":"2023-03-22","objectID":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/:5:0","tags":["测试"],"title":"测试post文档创建","uri":"/test/%E6%B5%8B%E8%AF%95post%E6%96%87%E6%A1%A3%E5%88%9B%E5%BB%BA/"},{"categories":["问答"],"content":" 本文档记录一些常见的问答，主要来自 GitHub Discussions 和 QQ 群：403144966。 为什么不支持早期版本的 Hugo？ 由于 函数 path.Clean 在 Hugo 发行版 v0.89.0 中被引入的，因此本主题只支持不低于 0.89.0 的 Hugo 版本。 为什么推荐使用 Hugo extended 版本？ 由于这个主题的一些特性需要将 SCSS 转换为 CSS, 推荐使用 Hugo extended 版本来获得更好的使用体验。 如何切换 Hugo 的运行环境？ hugo server 的默认运行环境是 development, 而 hugo 的默认运行环境是 production。 由于本地 development 环境的限制， 评论系统 , CDN 和 fingerprint 不会在 development 环境下启用。 你可以使用 hugo server -e production 命令来开启这些特性。 怎样选择搜索引擎？ 以下是两种搜索引擎的对比： fuse: 简单，无需同步 index.json, 没有 contentLength 的限制，性能高 lunr: 简单，无需同步 index.json, 没有 contentLength 的限制，但占用带宽大且性能低（特别是中文需要一个较大的分词依赖库） algolia: 高性能并且占用带宽低，但需要同步 index.json 且有 contentLength 的限制 文章内容被 h2 和 h3 HTML 标签切分来提高查询效果并且基本实现全文搜索。 contentLength 用来限制 h2 和 h3 HTML 标签开头的内容部分的最大长度。 其他问题？ 没找到你的问题？加入 讨论 或者 QQ 群：403144966。 ","date":"2023-03-20","objectID":"/question/:0:0","tags":["问答"],"title":"常见问答","uri":"/question/"},{"categories":["文档"],"content":"资源不在多，在于精，选择自己需要的就行，存储太多反而给自己徒增烦恼。 03-21 ChatGPT Lighthouse (figure) 🆔 插件名称：ChatGPT for Google ⭐️ 插件功能：搜索引擎加载ChatGPT ➡️ 支持平台：#Chrome #Firefox 📁 插件简介：一个免费的浏览器扩展工具，能够在谷歌搜索、必应、百度、yandex、DuckDuckGo等主流搜索引擎搜索结果旁边显示ChatGPT对话响应结果，通过 ChatGPT 的强大功能增强搜索引擎。 软件特点： ◉ 支持所有主流的搜索引擎 ◉ 支持OpenAI官方API ◉ 从插件弹窗里快速使用ChatGPT ◉ 支持Markdown渲染 ◉ 支持代码高亮 ◉ 支持深色模式 ◉ 可自定义ChatGPT触发模式 🌐 插件下载：点击下载 SubtitleEdit Lighthouse (figure) 🆔 软件名称：SubtitleEdit ⭐️ 软件功能：字幕编辑 ➡️ 支持平台：#Windows 📁 软件简介：一款简单好用的视频字幕编辑制作软件。可以快速编辑制作字幕，可以通过多种方式轻松调整原有 的字幕，支持从头开始自己添加创建调整字幕行，可使用时间线/波形/频谱图等，或者是进行字幕翻译添加。 🌐 软件下载：点击下载 ","date":"2023-03-16","objectID":"/dailyshare/%E5%88%86%E4%BA%AB%E5%90%88%E9%9B%86/:0:0","tags":["合集"],"title":"3月分享合集","uri":"/dailyshare/%E5%88%86%E4%BA%AB%E5%90%88%E9%9B%86/"},{"categories":["文档"],"content":"资源不在多，在于精，选择自己需要的就行，存储太多反而给自己徒增烦恼。 03-21 Lighthouse (figure) 描述： ​ ◎ 解锁会员，点击购买然后取消。 ​ 🎁关注挖掘宝藏↓ ​ 👉趣导航 描述： ❏ Photoshop的在线简版应用, 是强大的在线图像处理，设计工具。 🆔 网站名称： 懒得勤快 📁 网站简介：个人资源网站，互联网分享精神，乐于发现，勤于分享 🌐 网站网址： 点击直达 ⭐️资源来源∶ 优质网站汇总频道 📁 资源名称： Android VPN Inf MOD.4.106 💬 资源简介：VPN Inf - 免费稳定快速无限制的 VPN 🔗 资源链接：VPN Inf MOD APK 7.4.106 📌 资源标签：#VPNInf #代理工具 #安卓应用 #安卓破解 #VPN ✈ 🎉 机场套餐：9.5元/年200G/月 5元2000G/月 18元1T不过期 ➡️官网 三分机场.xyz 🚀 搜群神器 TG中文频道导航 🎁 搞钱 🧧 成人 🔞 搜索群 🔭 🈲 一键搜索所有你想的 🔥 一键探索你所需要的 😏 一键解决日常所有问题 ➡️ 频道：@souqun666 🤖消息投稿/广告投放/合作联系⬅️ FixIt 主题的仓库 https://github.com/hugo-fixit/FixIt 信息 当你运行 hugo server 时，当文件内容更改时，页面会随着更改自动刷新。 This is a tip 一个 技巧 横幅 技巧 一个 技巧 横幅 注意 一个 注意 横幅 摘要 一个 摘要 横幅 信息 一个 信息 横幅 成功 一个 成功 横幅 问题 一个 问题 横幅 警告 一个 警告 横幅 失败 一个 失败 横幅 危险 一个 危险 横幅 Bug 一个 Bug 横幅 示例 一个 示例 横幅 引用 一个 引用 横幅 图标 代码块原样输出 {{\u003c admonition quote \u003e}} 一个 引用 横幅 {{\u003c /admonition \u003e}} Front Matter中常用的变量 title: 内容标题 date: 该页面的时间, 一般用来存放页面的创建时间. draft: 如果true, 表示页面为草稿页, 内容不会呈现在网站中, 除非添加 –buildDrafts 给hugo命令. keywords: 页面的关键字 description: 内容描述, 主要用于SEO优化. weight: 列表页的文章排序, 值越小越靠前, 默认是按时间先后排序的, 也就是date中的值 模板页中常用的变量 .Title: 获取Front Matter中title的值 .Content: 获取文章的内容 .Date: 获取Front Matter中date的值 .Description: 获取Front Matter中description的值, 一般用于meta中的description字段 .Keywords: 获取Front Matter中keywords的值, 用于meta中的keyword字段 .Permalink: 获取页面的链接地址(URL) .Next: 下一个页面 .Prev: 上一个页面 .WordCount: 内容的字数 .ReadingTime: 阅读内容的预估时间 .Pages: 当前列表页面下的内容页面的集合, 该变量在内容页模板的上下文中值为nil .Site: 站点变量, 该变量下包含很多站点级别的属性和方法. 文档 -每日分享 -实用工具 -搜索下载 -英语 -合集 -另类 关于 -友链 -教程 -参考 -分类 -标签 -常见问题 留言 RSS订阅 每日60秒 这个是text-muted属性的强调色！ 这个是text-primary属性的强调色！ 这个是text-success属性的强调色！ 这个是text-info属性的强调色！ 这个是text-warning属性的强调色！ 这个是text-danger属性的强调色！ ","date":"2023-03-16","objectID":"/test/%E5%88%86%E4%BA%AB%E5%90%88%E9%9B%86/:0:0","tags":["合集"],"title":"3月分享合集","uri":"/test/%E5%88%86%E4%BA%AB%E5%90%88%E9%9B%86/"},{"categories":["工具"],"content":"资源不在多，在于精，选择自己需要的就行，存储太多反而给自己徒增烦恼。 📚PDF类型【科普】 在转换PDF文档前，我们要先了解所转换的PDF文档是属于什么编码类型 PDF文档分：标准编码的文字型PDF 和 非标准编码的文字型PDF 👉 详情了解 《标准编码的文字型PDF定义及非标准编码PDF类型》 标准编码的文字型PDF： PDF中可以正确的选中文字、复制它，并粘贴到记事本中之后看到的文字和pdf中相同，故标准编码的PDF可以直接无损转换，有些带OCR功能的软件可以直接转换图片的文字 Lighthouse (figure) 非标准编码的文字型PDF： PDF文档大部分都是不能选中文字、复制它，因为基本都是图片形式 这类PDF文档就要利用第三方软件转换成可编辑的标准编码格式,再进行转换 👉 转换软件：蓝奏云 Lighthouse (figure) ","date":"2023-03-16","objectID":"/tools/%E5%B7%A5%E5%85%B7%E5%90%88%E9%9B%86/:0:0","tags":["pdf转换工具"],"title":"pdf转word等格式工具","uri":"/tools/%E5%B7%A5%E5%85%B7%E5%90%88%E9%9B%86/"},{"categories":["文档"],"content":"探索 Hugo - FixIt 主题的的进阶使用。 ","date":"2023-03-16","objectID":"/tutorial/shili-jinjiepian/:0:0","tags":["安装","基础"],"title":"进阶篇","uri":"/tutorial/shili-jinjiepian/"},{"categories":["文档"],"content":"自定义样式 注意 Hugo extended 版本对于自定义样式是必需的。 通过定义自定义 .scss 样式文件，FixIt 主题支持可配置的样式。 包含自定义 .scss 样式文件的目录相对于 你的项目根目录 的路径为 assets/css。 在 assets/css/_override.scss 中，你可以覆盖 themes/FixIt/assets/css/_variables.scss 中的变量以自定义样式。 这是一个例子： @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; 在 assets/css/_custom.scss 中，你可以添加一些 CSS 样式代码以自定义样式。 ","date":"2023-03-16","objectID":"/tutorial/shili-jinjiepian/:1:0","tags":["安装","基础"],"title":"进阶篇","uri":"/tutorial/shili-jinjiepian/"},{"categories":["文档"],"content":"页面宽度 FixIt 主题提供了页面宽度配置选项 pageStyle 并提供三种选项。 narrow 保留 \u003cv0.2.13 页面目录宽度比 normal 新的默认页面目录宽度比 wide 较大的页面目录宽度比 另外，你还可以在 assets/css/_custom.scss 中，自定义 pageStyle 值 例如： pageStyle=\"custom\" @media only screen and (min-width: 1441px) { [data-page-style='custom'] { .page { width: 70%; } aside { width: 15%; } } } @media only screen and (max-width: 1440px) { [data-page-style='custom'] { .page { width: 60%; } aside { width: 20%; } } } @media only screen and (max-width: 1200px) { [data-page-style='custom'] { .page { width: 56%; } aside { width: 22%; } } } ","date":"2023-03-16","objectID":"/tutorial/shili-jinjiepian/:1:1","tags":["安装","基础"],"title":"进阶篇","uri":"/tutorial/shili-jinjiepian/"},{"categories":["文档"],"content":"打印样式 在 FixIt 主题中，提供有三个打印视图相关的 CSS 类 page-break-before 在元素之前插入分页符 page-break-after 在元素之后插入分页符 print-d-none 在打印视图中隐藏元素 下面是一个简单的例子： \u003cdiv class=\"page-break-before\"\u003e\u003c/div\u003e \u003cdiv class=\"page-break-after\"\u003e\u003c/div\u003e \u003cdiv class=\"print-d-none\"\u003e 您希望在打印视图中隐藏的某些内容写在此处。 \u003c/div\u003e 如果设置 goldmark.parser.attribute.block 为 true，你也可以这样用： {.page-break-before} {.page-break-after} 您希望在打印视图中隐藏的某些内容写在此处。 {.print-d-none} ","date":"2023-03-16","objectID":"/tutorial/shili-jinjiepian/:1:2","tags":["安装","基础"],"title":"进阶篇","uri":"/tutorial/shili-jinjiepian/"},{"categories":["文档"],"content":"自定义脚本 包含自定义脚本文件 custom.js 的目录相对于 你的项目根目录 的路径为 assets/js。 如果脚本文件 assets/js/custom.js 存在，它将在每篇文章和页面的末尾执行。 ","date":"2023-03-16","objectID":"/tutorial/shili-jinjiepian/:2:0","tags":["安装","基础"],"title":"进阶篇","uri":"/tutorial/shili-jinjiepian/"},{"categories":["文档"],"content":"自定义模板 Hugo 允许您通过覆盖主题模板来改造主题，例如：您可以创建 layouts/404.html 文件以覆盖 themes/FixIt/layouts/404.html，从而实现自定义 FixIt 主题 404 页面模板的需求。 但是，对于主题的大多数模板，FixIt 通常不建议您这样做，因为这样可能会导致未来升级主题困难。 为了避免升级冲突问题，基于这一特性，FixIt 主题在常用的位置开放了几个空的模板以供用户客制化，详见 主题配置 中的 params.customFilePath 参数。 例如，FixIt 主题文档站点通过创建 layouts/partials/custom/profile.html 自定义了首页的 profile 部分。 首先，启用自定义文件路径参数： [params.customFilePath] profile = \"custom/profile.html\" 然后，自定义模板： ","date":"2023-03-16","objectID":"/tutorial/shili-jinjiepian/:3:0","tags":["安装","基础"],"title":"进阶篇","uri":"/tutorial/shili-jinjiepian/"},{"categories":["文档"],"content":"PWA 支持 这部分内容在 PWA 支持页面 中介绍。 ","date":"2023-03-16","objectID":"/tutorial/shili-jinjiepian/:4:0","tags":["安装","基础"],"title":"进阶篇","uri":"/tutorial/shili-jinjiepian/"},{"categories":["文档","示例"],"content":" bilibili shortcode 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器。 如果视频只有一个部分，则仅需要视频的 BV id, 例如： https://www.bilibili.com/video/BV1Sx411T7QQ 一个 bilibili 示例： {{\u003c bilibili BV1Sx411T7QQ \u003e}} 或者 {{\u003c bilibili id=BV1Sx411T7QQ \u003e}} 如果视频包含多个部分，则除了视频的 BV id 之外，还需要 p, 默认值为 1, 例如： https://www.bilibili.com/video/BV1TJ411C7An?p=3 {{\u003c bilibili BV1TJ411C7An 3 \u003e}} 或者 {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} 呈现的输出效果如下： ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-bilibili/:0:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - bilibili","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-bilibili/"},{"categories":["文档","示例"],"content":" echarts shortcode 使用 ECharts 库提供数据可视化的功能。 ECharts 是一个帮助你生成交互式数据可视化的库。 ECharts 提供了常规的 折线图, 柱状图, 散点图, 饼图, K 线图, 用于统计的 [盒形图][boxplot], 用于地理数据可视化的 地图, 热力图, 线图, 用于关系数据可视化的 关系图, treemap, 旭日图, 多维数据可视化的 平行坐标, 还有用于 BI 的 漏斗图, 仪表盘, 并且支持图与图之间的混搭。 只需在 echarts shortcode 中以 JSON/YAML/TOML 格式插入 ECharts 选项即可。 一个 JSON 格式的 echarts 示例: echarts shortcode 还有以下命名参数: width [可选] (第一个位置参数) 数据可视化的宽度，默认值是 100% height [可选] (第二个位置参数) 数据可视化的高度，默认值是 30rem ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-echarts/:0:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - echarts","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-echarts/"},{"categories":["文档","示例"],"content":" mapbox shortcode 使用 Mapbox GL JS 库提供互动式地图的功能。 Mapbox GL JS 是一个 JavaScript 库，它使用 WebGL, 以 vector tiles 和 Mapbox styles 为来源，将它们渲染成互动式地图。 mapbox shortcode 有以下命名参数来使用 Mapbox GL JS: lng [必需]（第一个位置参数） 地图初始中心点的经度，以度为单位。 lat [必需]（第二个位置参数） 地图初始中心点的纬度，以度为单位。 zoom [可选]（第三个位置参数） 地图的初始缩放级别，默认值是 10。 marked [可选]（第四个位置参数） 是否在地图的初始中心点添加图钉，默认值是 true。 light-style [可选]（第五个位置参数） 浅色主题的地图样式，默认值是 前置参数 或者 主题配置 中设置的值。 dark-style [可选]（第六个位置参数） 深色主题的地图样式，默认值是 前置参数 或者 主题配置 中设置的值。 navigation [可选] 是否添加 NavigationControl, 默认值是 前置参数 或者 主题配置 中设置的值。 geolocate [可选] 是否添加 GeolocateControl, 默认值是 前置参数 或者 主题配置 中设置的值。 scale [可选] 是否添加 ScaleControl, 默认值是 前置参数 或者 主题配置 中设置的值。 fullscreen [可选] 是否添加 FullscreenControl, 默认值是 前置参数 或者 主题配置 中设置的值。 width [可选] 地图的宽度，默认值是 100%。 height [可选] 地图的高度，默认值是 20rem。 一个简单的 mapbox 示例： 或者 呈现的输出效果如下： 一个带有自定义样式的 mapbox 示例： 或者 呈现的输出效果如下： ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mapbox/:0:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mapbox","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mapbox/"},{"categories":["文档","示例"],"content":" mermaid shortcode 使用 Mermaid 库提供绘制图表和流程图的功能。 mermaid 是一个可以帮助你在文章中绘制图表和流程图的库，类似 Markdown 的语法。 只需将你的 mermaid 代码插入 mermaid shortcode 中即可。 技巧 你可以在 config.toml 中通过 params.mermaid 参数全局配置 mermaid 的主题 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:0:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"流程图 一个 流程图 mermaid 示例: {{\u003c mermaid \u003e}} graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:1:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"时序图 一个 时序图 mermaid 示例: {{\u003c mermaid \u003e}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:2:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"甘特图 一个 甘特图 mermaid 示例: {{\u003c mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:3:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"类图 一个 类图 mermaid 示例: {{\u003c mermaid \u003e}} classDiagram Animal \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:4:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"状态图 一个 状态图 mermaid 示例: {{\u003c mermaid \u003e}} stateDiagram-v2 [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:5:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"Git 图 一个 Git 图 mermaid 示例: {{\u003c mermaid \u003e}} gitGraph commit commit branch develop checkout develop commit commit checkout main merge develop commit commit {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:6:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"实体关系图 一个 实体关系图 mermaid 示例: {{\u003c mermaid \u003e}} erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses {{\u003c /mermaid \u003e}} ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:7:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"用户体验旅程图 一个 用户体验旅程图 mermaid 示例: {{\u003c mermaid \u003e}} journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:8:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"饼图 一个 饼图 mermaid 示例: {{\u003c mermaid \u003e}} pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:9:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":"依赖图 一个 依赖图 mermaid 示例: {{\u003c mermaid \u003e}} requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } element test_entity { type: simulation } test_entity - satisfies -\u003e test_req {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/:10:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - mermaid","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-mermaid/"},{"categories":["文档","示例"],"content":" music shortcode 基于 APlayer 和 MetingJS 提供了一个内嵌的响应式音乐播放器。 有三种方式使用 music shortcode。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/:0:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - music","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/"},{"categories":["文档","示例"],"content":"1 自定义音乐 URL 支持 本地资源引用 的完整用法。 music shortcode 有以下命名参数来使用自定义音乐 URL: server [必需] 音乐的链接。 type [可选] 音乐的名称。 artist [可选] 音乐的创作者。 cover [可选] 音乐的封面链接。 一个使用自定义音乐 URL 的 music 示例： {{\u003c music url=\"/music/Wavelength.mp3\" name=Wavelength artist=oldmanyoung cover=\"/images/Wavelength.jpg\" \u003e}} 呈现的输出效果如下： ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/:1:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - music","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/"},{"categories":["文档","示例"],"content":"2 音乐平台 URL 的自动识别 music shortcode 有一个命名参数来使用音乐平台 URL 的自动识别： auto [必需]]（第一个位置参数） 用来自动识别的音乐平台 URL, 支持 netease, tencent 和 xiami 平台。 一个使用音乐平台 URL 的自动识别的 music 示例： {{\u003c music auto=\"https://music.163.com/#/playlist?id=60198\" \u003e}} 或者 {{\u003c music \"https://music.163.com/#/playlist?id=60198\" \u003e}} ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/:2:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - music","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/"},{"categories":["文档","示例"],"content":"3 自定义音乐平台，类型和 ID music shortcode 有以下命名参数来使用自定义音乐平台： server [必需]（第一个位置参数） [netease, tencent, kugou, xiami, baidu] 音乐平台。 type [必需]（第二个位置参数） [song, playlist, album, search, artist] 音乐类型。 id [必需]（第三个位置参数） 歌曲 ID, 或者播放列表 ID, 或者专辑 ID, 或者搜索关键词，或者创作者 ID。 一个使用自定义音乐平台的 music 示例： {{\u003c music server=\"netease\" type=\"song\" id=\"1868553\" \u003e}} 或者 {{\u003c music netease song 1868553 \u003e}} 呈现的输出效果如下： ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/:3:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - music","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/"},{"categories":["文档","示例"],"content":"4 其它参数 music shortcode 有一些可以应用于以上三种方式的其它命名参数： theme [可选] 音乐播放器的主题色，默认值是 #448aff。 fixed [可选] 是否开启固定模式，默认值是 false。 mini [可选] 是否开启迷你模式，默认值是 false。 autoplay [可选] 是否自动播放音乐，默认值是 false。 volume [可选] 第一次打开播放器时的默认音量，会被保存在浏览器缓存中，默认值是 0.7。 mutex [可选] 是否自动暂停其它播放器，默认值是 true。 music shortcode 还有一些只适用于音乐列表方式的其它命名参数： loop [可选] [all, one, none] 音乐列表的循环模式，默认值是 none。 order [可选] [list, random] 音乐列表的播放顺序，默认值是 list。 list-folded [可选] 初次打开的时候音乐列表是否折叠，默认值是 false。 list-max-height [可选] 音乐列表的最大高度，默认值是 340px。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/:4:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - music","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcode-music/"},{"categories":["文档","示例"],"content":"typeit shortcode 基于 TypeIt 提供了打字动画。 只需将你需要打字动画的内容插入 typeit shortcode 中即可。 typeit shortcode 有以下命名参数： tag [可选] 内容容器的 HTML 标签。 code [可选] 指定代码内容语言类型，可以实习语法高亮。 code-link [可选] 是否解析代码内容中的 Markdown 链接，默认：false。 group [可选] 内容分组，相同分组的内容将按顺序开始打字动画。 loop [可选] 内容是否会在打字动画完成后继续循环。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/tuozhanpian/:0:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - typeit","uri":"/tutorial/shili-tuozhanpian/tuozhanpian/"},{"categories":["文档","示例"],"content":"简单内容 允许使用 Markdown 格式的简单内容，并且 不包含 富文本的块内容，例如图像等等…… 一个 typeit 示例： {{\u003c typeit tag=h4 \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*…… {{\u003c /typeit \u003e}} 呈现的输出效果如下： 另外，你也可以自定义 HTML 标签. 一个带有 h4 标签的 typeit 示例： {{\u003c typeit tag=h4 \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*…… {{\u003c /typeit \u003e}} 呈现的输出效果如下： ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/tuozhanpian/:1:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - typeit","uri":"/tutorial/shili-tuozhanpian/tuozhanpian/"},{"categories":["文档","示例"],"content":"代码内容 代码内容也是允许的，并且通过使用参数 code 指定语言类型可以实习语法高亮。 一个带有 code 参数的 typeit 示例： {{\u003c typeit code=java \u003e}} public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } {{\u003c /typeit \u003e}} 呈现的输出效果如下： ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/tuozhanpian/:2:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - typeit","uri":"/tutorial/shili-tuozhanpian/tuozhanpian/"},{"categories":["文档","示例"],"content":"分组内容 默认情况下，所有打字动画都是同时开始的。 但是有时你可能需要按顺序开始一组 typeit 内容的打字动画。 一组具有相同 group 参数值的 typeit 内容将按顺序开始打字动画。 一个带有 group 参数的 typeit 示例： {{\u003c typeit group=paragraph \u003e}} **首先**, 这个段落开始 {{\u003c /typeit \u003e}} {{\u003c/* typeit group=paragraph \u003e}} **然后**, 这个段落开始 {{\u003c /typeit \u003e}} 呈现的输出效果如下： ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/tuozhanpian/:3:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcode - typeit","uri":"/tutorial/shili-tuozhanpian/tuozhanpian/"},{"categories":["文档","示例"],"content":" FixIt 主题在 Hugo 内置的 shortcode 的基础上提供多个扩展的 shortcode。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:0:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"style 注意 Hugo extended 版本对于 style shortcode 是必需的。 style shortcode 用来在你的文章中插入自定义样式。 style shortcode 有两个位置参数。 第一个参数是自定义样式的内容。它支持 SASS 中的嵌套语法， 并且 \u0026 指代这个父元素。 第二个参数是包裹你要更改样式的内容的 HTML 标签，默认值是 div。 一个 style 示例： {{\u003c style \"text-align:right; strong{color:#00b1ff;}\" \u003e}} This is a **right-aligned** paragraph. {{\u003c /style \u003e}} 呈现的输出效果如下： This is a right-aligned paragraph. ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:1:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"link link shortcode 是 Markdown 链接语法 的替代。 link shortcode 可以提供一些其它的功能并且可以在代码块中使用。 支持 本地资源引用 的完整用法。 link shortcode 有以下命名参数： href [必需]（第一个位置参数） 链接的目标。 content [可选]（第二个位置参数） 链接的内容，默认值是 href 参数的值。 支持 Markdown 或者 HTML 格式。 title [可选]（第三个位置参数） HTML a 标签 的 title 属性，当悬停在链接上会显示的提示。 card [可选]（第四个位置参数） 是否显示为卡片式链接，默认值 false。 download [可选] HTML a 标签 的 download 属性。 class [可选] HTML a 标签 的 class 属性。 rel [可选] HTML a 标签 的 rel 补充属性。 external-icon [可选] 是否自动显示外链图标。 noreferrer [可选] rel 属性是否添加 noreferrer, 默认：true。 一个 link 示例： {{\u003c link \"https://assemble.io\" \u003e}} 或者 {{\u003c link href=\"https://assemble.io\" \u003e}} {{\u003c link \"mailto:contact@revolunet.com\" \u003e}} 或者 {{\u003c link href=\"mailto:contact@revolunet.com\" \u003e}} {{\u003c link \"https://assemble.io\" Assemble \u003e}} 或者 {{\u003c link href=\"https://assemble.io\" content=Assemble \u003e}} 呈现的输出效果如下： https://assemble.io mailto:contact@revolunet.com Assemble 一个带有标题的 link 示例： {{\u003c link \"https://github.com/upstage/\" Upstage \"Visit Upstage!\" \u003e}} 或者 {{\u003c link href=\"https://github.com/upstage/\" content=Upstage title=\"Visit Upstage!\" \u003e}} 呈现的输出效果如下 （将鼠标悬停在链接上，会有一行提示）: Upstage 一个卡片式 link 示例： {{\u003c link \"https://github.com/hugo-fixit/FixIt\" \"FixIt Theme\" \"source of FixIt Theme\" true \u003e}} 或者 {{\u003c link href=\"https://github.com/hugo-fixit/FixIt\" content=\"FixIt Theme\" title=\"source of FixIt Theme\" card=true \u003e}} 呈现的输出效果如下： FixIt Theme https://github.com/hugo-fixit/FixIt 一个可下载的 link 示例： {{\u003c link href=\"/music/Wavelength.mp3\" content=\"Wavelength\" title=\"Download Wavelength.mp3\" download=\"Wavelength.mp3\" \u003e}} {{\u003c link href=\"/music/Wavelength.mp3\" content=\"Wavelength.mp3\" title=\"Download Wavelength.mp3\" download=\"Wavelength.mp3\" card=true \u003e}} 呈现的输出效果如下： Wavelength Wavelength.mp3 /music/Wavelength.mp3 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:2:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"image image shortcode 是 [figure shortcode][figure] 的替代。image shortcode 可以充分利用 lightgallery。 支持 本地资源引用 的完整用法。 image shortcode 有以下命名参数： src [必需]（第一个位置参数） 图片的 URL。 alt [可选]（第二个位置参数） 图片无法显示时的替代文本，默认值是 src 参数的值。 支持 Markdown 或者 HTML 格式。 caption [可选]（第三个位置参数） 图片标题。 支持 Markdown 或者 HTML 格式。 title [可选] 当悬停在图片上会显示的提示。 class [可选] HTML figure 标签的 class 属性。 src_s [可选] 图片缩略图的 URL, 用在画廊模式中，默认值是 src 参数的值。 src_l [可选] 高清图片的 URL, 用在画廊模式中，默认值是 src 参数的值。 height [可选] 图片的 height 属性。 width [可选] 图片的 width 属性。 linked [可选] 图片是否需要被链接，默认值是 true。 rel [可选] HTML a 标签 的 rel 补充属性，仅在 linked 属性设置成 true 时有效。 loading [可选] HTML a 标签 的 loading 补充属性，可选值：eager、lazy，默认值是 lazy。 一个 image 示例： {{\u003c image src=\"/images/lighthouse.jpg\" caption=\"Lighthouse (`image`)\" src_s=\"/images/lighthouse-small.jpg\" src_l=\"/images/lighthouse-large.jpg\" \u003e}} 呈现的输出效果如下： Lighthouse (image) ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:3:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"admonition admonition shortcode 支持 12 种 帮助你在页面中插入提示的横幅。 支持 Markdown 或者 HTML 格式。 This is a tip 一个 技巧 横幅 注意 一个 注意 横幅 摘要 一个 摘要 横幅 信息 一个 信息 横幅 成功 一个 成功 横幅 问题 一个 问题 横幅 警告 一个 警告 横幅 失败 一个 失败 横幅 危险 一个 危险 横幅 Bug 一个 Bug 横幅 示例 一个 示例 横幅 引用 一个 引用 横幅 admonition shortcode 有以下命名参数： type [必需]（第一个位置参数） admonition 横幅的类型，默认值是 note。 title [可选]（第二个位置参数） admonition 横幅的标题，默认值是 type 参数的值。（支持 markdown） open [可选]（第三个位置参数） 横幅内容是否默认展开，默认值是 true。 一个 admonition 示例： {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 或者 {{\u003c admonition tip \"This is a tip\" false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 呈现的输出效果如下： This is a tip 一个 技巧 横幅 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:4:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"mermaid mermaid shortcode 使用 Mermaid 库提供绘制图表和流程图的功能。 完整文档请查看页面 扩展 Shortcode - mermaid。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:5:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"echarts echarts shortcode 使用 ECharts 库提供数据可视化的功能。 完整文档请查看页面 扩展 Shortcode - echarts。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:6:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"mapbox mapbox shortcode 使用 Mapbox GL JS 库提供互动式地图的功能。 完整文档请查看页面 扩展 Shortcode - mapbox。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:7:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"music music shortcode 基于 APlayer 和 MetingJS 库提供了一个内嵌的响应式音乐播放器。 完整文档请查看页面 扩展 Shortcode - music。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:8:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"bilibili bilibili shortcode 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器。 完整文档请查看页面 扩展 Shortcode - bilibili。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:9:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"typeit typeit shortcode 基于 TypeIt 提供了打字动画。 完整文档请查看页面 扩展 Shortcode - typeit。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:10:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"script script shortcode 用来在你的文章中插入 Javascript 脚本。 注意 脚本内容可以保证在所有的第三方库加载之后按顺序执行。 所以你可以自由地使用第三方库。 一个 script 示例： {{\u003c script \u003e}} console.log('Hello FixIt!'); {{\u003c /script \u003e}} 你可以在开发者工具的控制台中看到输出。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:11:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"details details shortcode 用来在你的文章中插入 HTML5 标签 details 和 summary。 details shortcode 只有一个参数： summary [可选] (第一个位置参数） summary 标签的内容（支持 markdown） 一个 details 示例： {{\u003c details \"**Copyright** 2022.\" \u003e}} *All pages and graphics on this web site are the property of FixIt.* {{\u003c /details \u003e}} 或者 {{\u003c details summary=\"**Copyright** 2022.\" \u003e}} *All pages and graphics on this web site are the property of FixIt.* {{\u003c /details \u003e}} 呈现的输出效果如下： Copyright 2022. All pages and graphics on this web site are the property of FixIt. ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:12:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"center-quote center-quote shortcode 用来在你的文章中插入文本居中的 blockquote 标签。 一个 center-quote 示例： {{\u003c center-quote \u003e}} **hello** *world* this is a center-quote shortcode example. {{\u003c /center-quote \u003e}} 呈现的输出效果如下： hello world this is a center-quote shortcode example. ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:13:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"fixit-encryptor 您可以使用 fixit-encryptor shortcode 来加密部分内容。 完整文档请查看页面 内容加密。 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:14:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"raw raw shortcode 用来在你的文章中插入原始 HTML 内容。 raw shortcode 只有一个参数： tag [可选] (第一个位置参数） 原始内容的父级元素 HTML 标签，默认值是 div。 一个 raw 示例: 行内公式：\\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\) 公式块： \\[ a=b+c \\\\ d+e=f \\] 原始的带有 Markdown 和 HTML 语法的内容：**Hello** FixIt 呈现的输出效果如下： 行内公式：\\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\) 公式块： \\[ a=b+c \\\\ d+e=f \\] 原始的带有 Markdown 和 HTML 语法的内容：**Hello** FixIt ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:15:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档","示例"],"content":"reward reward shortcode 有以下命名参数： wechatpay [可选]（第一个位置参数） alipay [可选]（第二个位置参数） paypal [可选]（第三个位置参数） bitcoin [可选]（第四个位置参数） author [可选]（第五个位置参数） comment [可选]（第六个位置参数） 一个 reward 示例: 给作者买杯卡布奇诺～ 赞赏 支付宝 微信 呈现的输出效果如下： 给作者买杯卡布奇诺～ 赞赏 支付宝 微信 ","date":"2023-03-16","objectID":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/:16:0","tags":["安装","基础","拓展"],"title":"扩展 Shortcodes","uri":"/tutorial/shili-tuozhanpian/%E6%89%A9%E5%B1%95-shortcodes/"},{"categories":["文档"],"content":"了解如何在 FixIt 主题中快速，直观地创建和组织内容。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:0:0","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"内容组织 以下是一些方便你清晰管理和生成文章的目录结构建议： 保持博客文章存放在 content/posts 目录，例如：content/posts/my-first-post.md 保持简单的静态页面存放在 content 目录，例如：content/about.md 本地资源组织 注意 有三种方法来引用图片和音乐等本地资源： 使用 页面包 中的 页面资源。 你可以使用适用于 Resources.GetMatch 的值或者直接使用相对于当前页面目录的文件路径来引用页面资源。 将本地资源放在 assets 目录中，默认路径是 /assets。 引用资源的文件路径是相对于 assets 目录的。 将本地资源放在 static 目录中，默认路径是 /static。 引用资源的文件路径是相对于 static 目录的。 引用的优先级符合以上的顺序。 在这个主题中的很多地方可以使用上面的本地资源引用， 例如 链接 , 图片 , image shortcode, music shortcode 和前置参数中的部分参数。 页面资源或者 assets 目录中的 图片处理 会在未来的版本中得到支持。 非常酷的功能！ ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:1:0","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"前置参数 Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数。 注意 不是所有的以下前置参数都必须在你的每篇文章中设置。 只有在文章的参数和你的 主题配置 中的 page 部分不一致时才有必要这么做。 title: 文章标题 subtitle: 文章副标题 date: 这篇文章创建的日期时间它通常是从文章的前置参数中的 date 字段获取的，但是也可以在 主题配置 中设置 lastmod: 上次修改内容的日期时间 draft: 如果设为 true, 除非 hugo 命令使用了 --buildDrafts/-D 参数，这篇文章不会被渲染 authorAvatar: 是否启用文章作者头像 author: 文章作者 authorLink: 文章作者的链接 authorEmail: 文章作者的邮箱 description: 文章内容的描述 keywords: 文章内容的关键词 license: 这篇文章特殊的许可 images: 页面图片，用于 Open Graph 和 Twitter Cards tags: 文章的标签 categories: 文章所属的类别 featuredImage: 文章的特色图片 featuredImagePreview: 用在主页预览的文章特色图片 hiddenFromHomePage: 如果设为 true, 这篇文章将不会显示在主页上 hiddenFromSearch: 如果设为 true, 这篇文章将不会显示在搜索结果中 twemoji: 如果设为 true, 这篇文章会使用 twemoji lightgallery: 和 主题配置 中的 params.page.lightgallery 部分相同 ruby: 如果设为 true, 这篇文章会使用 上标注释扩展语法 fraction: 如果设为 true, 这篇文章会使用 分数扩展语法 fontawesome: 如果设为 true, 这篇文章会使用 Font Awesome 扩展语法 linkToMarkdown: 如果设为 true, 内容的页脚将显示指向原始 Markdown 文件的链接 rssFullText: 如果设为 true, 在 RSS 中将会显示全文内容 pageStyle: 页面样式，详见 页面宽度 gravatarForce: 强制使用 Gravatar 作为作者头像 toc: 和 主题配置 中的 params.page.toc 部分相同 expirationReminder: 和 主题配置 中的 params.page.expirationReminder 部分相同 code: 和 主题配置 中的 params.page.code 部分相同 edit: 和 主题配置 中的 params.page.edit 部分相同 math: 和 主题配置 中的 params.page.math 部分相同 mapbox: 和 主题配置 中的 params.page.mapbox 部分相同 share: 和 主题配置 中的 params.page.share 部分相同 comment: 和 主题配置 中的 params.page.comment 部分相同 library: 和 主题配置 中的 params.page.library 部分相同 seo: 和 主题配置 中的 params.page.seo 部分相同 type: 页面渲染模板，详见 页面模板 menu: 详见 添加内容到菜单 password: 加密页面内容的密码，详见 内容加密 message: 加密提示信息，详见 内容加密 repost: 和 主题配置 中的 params.page.repost 部分相同 autoBookmark: 和 主题配置 中的 params.page.autoBookmark 部分相同 wordCount: 和 主题配置 中的 params.page.wordCount 部分相同 readingTime: 和 主题配置 中的 params.page.readingTime 部分相同 endFlag: 和 主题配置 中的 params.page.endFlag 部分相同 reward: 和 主题配置 中的 params.page.reward 部分相同 instantPage: 和 主题配置 中的 params.page.instantPage 部分相同 技巧 featuredImage 和 featuredImagePreview 支持 本地资源引用 的完整用法。 如果带有在前置参数中设置了 name: featured-image 或 name: featured-image-preview 属性的页面资源， 没有必要在设置 featuredImage 或 featuredImagePreview:不是所有的以下前置参数都必须在你的每篇文章中设置。 只有在文章的参数和你的 主题配置 中的 page 部分不一致时才有必要这么做。 resources: - name: featured-image src: featured-image.jpg - name: featured-image-preview src: featured-image-preview.jpg FixIt 主题内嵌了一些 原型，在使用以下命令创建新内容时生效，会自动带入常用的前置参数： hugo new posts/foo.md hugo new --kind post-bundle posts/bar/ 这是一个前置参数例子： --- title: \"我的第一篇文章\" subtitle: \"\" date: 2020-03-04T15:58:26+08:00 lastmod: 2020-03-04T15:58:26+08:00 draft: true author: \"\" authorLink: \"\" authorEmail: \"\" description: \"\" keywords: \"\" license: \"\" images: [] tags: [] categories: [] featuredImage: \"\" featuredImagePreview: \"\" hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true linkToMarkdown: true rssFullText: false pageStyle: \"normal\" toc: enable: true auto: true expirationReminder: enable: false # ... code: copy: true # ... edit: enable: false # ... math: enable: true # ... mapbox: accessToken: \"\" # ... share: enable: true # ... comment: enable: true # ... library: css: # someCSS = \"some.css\" # 位于 \"assets/\" # 或者 # someCSS = \"https://cdn.example.com/some.css\" js: # someJS = \"some.js\" # 位于 \"assets/\" # 或者 # someJS = \"https://cdn.example.com/some.js\" seo: images: [] # ... --- ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:2:0","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"内容摘要 FixIt 主题使用内容摘要在主页中显示大致文章信息。Hugo 支持生成文章的摘要。 文章摘要预览 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:3:0","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"自动摘要拆分 默认情况下，Hugo 自动将内容的前 70 个单词作为摘要。 你可以通过在网站配置中设置 summaryLength 来自定义摘要长度。 如果您要使用 CJK中文 / 日语 / 韩语 语言创建内容，并且想使用 Hugo 的自动摘要拆分功能，请在网站配置中将 hasCJKLanguage 设置为 true。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:3:1","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"手动摘要拆分 另外，你也可以添加 \u003c!--more--\u003e 摘要分割符来拆分文章生成摘要。 摘要分隔符之前的内容将用作该文章的摘要。 注意 请小心输入 \u003c!--more--\u003e ; 即全部为小写且没有空格。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:3:2","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"前置参数摘要 你可能希望摘要不是文章开头的文字。在这种情况下，你可以在文章前置参数的 summary 变量中设置单独的摘要。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:3:3","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"使用文章描述作为摘要 你可能希望将文章前置参数中的 description 变量的内容作为摘要。 你仍然需要在文章开头添加 \u003c!--more--\u003e 摘要分割符。将摘要分隔符之前的内容保留为空。然后 FixIt 主题会将你的文章描述作为摘要。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:3:4","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"摘要选择的优先级顺序 由于可以通过多种方式指定摘要，因此了解顺序很有用。如下： 如果文章中有 \u003c!--more--\u003e 摘要分隔符，但分隔符之前没有内容，则使用描述作为摘要。 如果文章中有 \u003c!--more--\u003e 摘要分隔符，则将按照手动摘要拆分的方法获得摘要。 如果文章前置参数中有摘要变量，那么将以该值作为摘要。 按照自动摘要拆分方法。 注意 不建议在摘要内容中包含富文本块元素，这会导致渲染错误。例如代码块，图片，表格等。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:3:5","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"页面模板 一般情况，你不需要设置 type 参数，因为 Hugo 和 FixIt 会帮你选择。但是 FixIt 主题提供了一些特殊的模板给用户使用。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:4:0","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"友情链接 在前置参数中设置 type: friends，并在 yourSite/data/ 目录下创建 friends.yml，其内容格式如下： # 朋友/站点信息例子 - nickname: 朋友名字 avatar: 朋友头像 url: 站点链接 description: 对朋友或其站点的说明 技巧 你可以使用以下命令快速创建友情链接页面： hugo new friends/index.md ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:4:1","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"离线页面 详见 PWA 支持 在前置参数中设置 type: offline，并在 config.toml 中开启 enablePWA： [params] # enable PWA # 开启 PWA 支持 enablePWA = true 技巧 你可以使用以下命令快速创建离线页面： hugo new offline/index.md ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:4:2","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"内容加密 这部分内容在 内容加密页面 中介绍。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:5:0","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"Markdown 语法 这部分内容在 Markdown 基本语法页面 和 Markdown 扩展语法页面 中介绍。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:6:0","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"Shortcodes 这部分内容在 Shortcodes 页面 中介绍。 ","date":"2023-03-16","objectID":"/tutorial/shili-neirongguanli/:7:0","tags":["安装","基础"],"title":"内容管理","uri":"/tutorial/shili-neirongguanli/"},{"categories":["文档"],"content":"探索 Hugo - FixIt 主题的的基础知识和背后的核心概念。 ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:0:0","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"安装方式 FixIt 主题的仓库 https://github.com/hugo-fixit/FixIt 实际上有多种方式可以快速安装主题，选择其中 一种 即可（推荐 Git 子模块 或者 Hugo 模块）。 ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:1:0","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"手动下载 你可以下载主题的 最新版本 .zip 文件 并且解压放到 themes 目录。 ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:1:1","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"Git 克隆 或者，也可以直接把这个主题克隆到 themes 目录： git clone https://github.com/hugo-fixit/FixIt.git themes/FixIt ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:1:2","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"Git 子模块 基于 Git 子模块的快速入门模板 https://github.com/hugo-fixit/hugo-fixit-blog 另外，在您的项目目录初始化一个空的 Git 存储库，将 FixIt 主题克隆到 themes 目录中，将其作为 Git 子模块 添加到您的项目中。 git init git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt 如果你想使用 dev 分支上的版本，可以使用以下命令： git submodule add -b dev https://github.com/hugo-fixit/FixIt.git themes/FixIt 或者将子模块分支从 master 切换到 dev： git submodule set-branch -b dev themes/FixIt ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:1:3","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"Hugo 模块 基于 Hugo 模块的快速入门模板 https://github.com/hugo-fixit/hugo-fixit-blog-go 以这种方式，无需要在 config.toml 中配置 theme = \"FixIt\"。 将 Hugo 模块 用于主题的最简单方法是将其导入配置中。请参阅 使用 Hugo 模块。 初始化 Hugo 模块系统：hugo mod init github.com/\u003cyour_user\u003e/\u003cyour_project\u003e 导入主题： [module] [[module.imports]] path = \"github.com/hugo-fixit/FixIt\" ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:1:4","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"完整配置 在开始配置之前，建议您执行以下命令，将主题的默认 config.toml 复制到您的项目中： mv config.toml config.old.toml cp themes/FixIt/config.toml config.toml ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:2:0","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"菜单配置 Hugo 有一个简单而强大的 菜单系统。 根据 Hugo 提供的接口，FixIt 主题只实现了部分功能，这足以满足大多数人的需求，也让用户在使用上更加简单。 下面是一个完整的菜单项配置： [menu] [[menu.main]] identifier = \"\" # 父级菜单项的标识符 (identifier) parent = \"\" # 你可以在名称（允许 HTML 格式）之前添加其他信息，例如图标 pre = \"\" # 你可以在名称（允许 HTML 格式）之后添加其他信息，例如图标 post = \"\" name = \"\" url = \"\" # 当你将鼠标悬停在此菜单链接上时，将显示的标题 title = \"\" weight = 1 # 向菜单项添加用户定义的内容 [menu.main.params] # 添加 CSS 类到菜单项 class = \"\" # 是否为草稿菜单，类似草稿页面 draft = false # 添加 fontawesome 图标到菜单项 icon = \"\" # 设置菜单项类型，可选值：[\"mobile\", \"desktop\"] type = \"\" 子菜单 考虑到实用性和排版问题，FixIt 主题只支持两层嵌套的菜单，通过在菜单配置中的 parent 字段即可。 一个菜单项的父项应该是另一个菜单项的标识符（identifier），在菜单中标识符应该是唯一的。 另外，也可以通过配置页面（即 .md 文件）的 front matter 添加内容到菜单中。 这是一个 yaml 示例： --- title: 入门篇 author: Lruihao menu: main: title: 探索 Hugo - FixIt 主题的的基础知识和背后的核心概念。 parent: documentation params: icon: fa-brands fa-readme # ... --- ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:2:1","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"主题配置 除了 Hugo 全局配置 和 菜单配置 之外，FixIt 主题还允许您在网站配置中定义以下参数。 请打开下面的代码块查看完整的 config.toml 示例配置: [params] # FixIt 主题版本 version = \"0.2.X\" # 例如：\"0.2.X\", \"0.2.15\", \"v0.2.15\" 等 # 网站描述 description = \"这是我的 Hugo FixIt 网站\" # 网站关键词 keywords = [\"Hugo\", \"FixIt\"] # 网站默认主题样式 [\"light\", \"dark\", \"auto\"] defaultTheme = \"auto\" # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # 日期格式 dateFormat = \"2006-01-02\" # 网站图片，用于 Open Graph 和 Twitter Cards images = [\"/logo.png\"] # 开启 PWA 支持 enablePWA = true # 是否自动显示外链图标 externalIcon = false # 默认情况下，FixIt 只会在主页的 HTML 头中注入主题元标记 # 您可以将其关闭，但如果您不这样做，我们将不胜感激，因为这是观察 FixIt 受欢迎程度上升的好方法 disableThemeInject = false # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题，覆盖默认标题 title = \"FixIt\" # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标，可替代旧的 .png 和 .ico 文件 svgFavicon = \"\" # Safari 图标颜色 iconColor = \"#5bbad5\" # Windows v8-10 磁贴颜色 tileColor = \"#da532c\" # Android 浏览器主题色 [params.app.themeColor] light = \"#f8f8f8\" dark = \"#252627\" # 搜索配置 [params.search] enable = true # 搜索引擎的类型 [\"lunr\", \"algolia\", \"fuse\"] type = \"lunr\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" [params.search.fuse] # https://fusejs.io/api/options.html isCaseSensitive = false minMatchCharLength = 2 findAllMatches = false location = 0 threshold = 0.3 distance = 100 ignoreLocation = false useExtendedSearch = false ignoreFieldNorm = false # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 [\"sticky\", \"normal\", \"auto\"] desktopMode = \"sticky\" # 移动端导航栏模式 [\"sticky\", \"normal\", \"auto\"] mobileMode = \"auto\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"/fixit.min.svg\" # 标题名称 name = \"我的 Hugo FixIt 网站\" # 你可以在名称（允许 HTML 格式）之前添加其他信息，例如图标 pre = \"\" # 你可以在名称（允许 HTML 格式）之后添加其他信息，例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false # 页面头部导航栏副标题配置 [params.header.subtitle] # 副标题名称 name = \"\" # 是否为副标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容（支持 HTML 格式） # 进阶使用，见参数 `params.customFilePath.footer` custom = \"\" # 是否显示 Hugo 和主题信息 hugo = true # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2021 # 是否显示网站内容总字数 wordCount = true # 公网安备信息，仅在中国使用（支持 HTML 格式） gov = \"\" # ICP 备案信息，仅在中国使用（支持 HTML 格式） icp = \"\" # 许可协议信息（支持 HTML 格式） license = '\u003ca rel=\"license external nofollow noopener noreferrer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # 网站创立时间 [params.footer.siteTime] enable = false animate = true icon = \"fa-solid fa-heartbeat\" pre = \"\" value = \"\" # e.g. \"2021-12-18T16:15:22+08:00\" # 页面底部行排序，可选值：[\"first\", 0, 1, 2, 3, 4, 5, \"last\"] [params.footer.order] powered = 0 copyright = 0 statistics = 0 visitor = 0 beian = 0 # Section（所有文章）页面配置 [params.section] # section 页面每页显示文章数量 paginate = 20 # 日期格式（月和日） dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 最近更新文章设置 [params.section.recentlyUpdated] enable = false rss = false days = 30 maxCount = 10 # List（目录或标签）页面配置 [params.list] # list 页面每页显示文章数量 paginate = 20 # 日期格式（月和日） dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 标签云配置 [params.tagcloud] enable = false min = 14 # 最小字体大小，单位：px max = 32 # 最大字体大小，单位：px peakCount = 10 # 每个标签的最大文章数 orderby = \"name\" # 标签排序方式，可选值：[\"name\", \"count\"] # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 gravatarEmail = \"\" # 主页显示头像的 URL avatarURL = \"/images/avatar.png\" # 头像菜单链接的 identifier avatarMenu = \"\" # 主页显示的网站标题（支持 HTML 格式） title = \"\" # 主页显示的网站副标题 subtitle = \"这是我的 Hugo FixIt 网站\" # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # 免责声明（支持 HTML 格式） disclaimer = \"\" # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # 作者的社交信息设置 [params.social] GitHub = \"Lruihao\" Linkedin = \"\" Twitter = \"\" Instagram = \"\" Facebook = \"\" Telegram = \"\" Medium = \"\" Gitlab = \"\" Youtubelegac","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:2:2","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"网站图标，浏览器配置，网站清单 强烈建议你把： apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) 放在 /static 目录。利用 https://realfavicongenerator.net/ 可以很容易地生成这些文件。 可以自定义 browserconfig.xml 和 site.webmanifest 文件来设置 theme-color 和 background-color。 ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:2:3","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"多语言和 i18n FixIt 主题完全兼容 Hugo 的多语言模式，并且支持在网页上切换语言。 ​ 语言切换 兼容性 语言 Hugo 代码 HTML lang 属性 主题文档 Lunr.js 支持 英语 en en 简体中文 zh-cn zh-CN 繁体中文 zh-tw zh-TW 法语 fr fr 波兰语 pl pl 巴西葡萄牙语 pt-br pt-BR 意大利语 it it 西班牙语 es es 德语 de de 塞尔维亚语 sr sr 俄语 ru ru 罗马尼亚语 ro ro 越南语 vi vi 基本配置 学习了 Hugo 如何处理多语言网站 之后，请在站点配置中定义你的网站语言。 例如，一个支持英语，中文和法语的网站配置： 然后，对于每个新页面，将语言代码附加到文件名中。 单个文件 my-page.md 需要分为三个文件： 英语：my-page.en.md 中文：my-page.zh-cn.md 法语：my-page.fr.md 技巧 也可以使用 文章前置参数 来翻译网址。 修改默认的翻译字符串 翻译字符串用于在主题中使用的常见默认值。 目前提供 一些语言 的翻译，但你可能自定义其他语言或覆盖默认值。 要覆盖默认值，请在你项目的 i18n 目录 i18n/\u003clanguageCode\u003e.toml 中创建一个新文件，并从 themes/FixIt/i18n/en.toml 中获得提示。 另外，由于你的翻译可能会帮助到其他人，请花点时间通过 创建一个 PR 来贡献主题翻译，谢谢！ ","date":"2023-03-16","objectID":"/tutorial/shili-rumenpian/:2:4","tags":["安装","基础"],"title":"入门篇","uri":"/tutorial/shili-rumenpian/"},{"categories":["文档"],"content":"学习在几分钟内创建一个 Hugo FixIt 站点。 以下步骤可帮助您初始化新网站。如果您根本不了解 Hugo，我们强烈建议您通过阅读此 快速入门文档 进一步了解它。或者如果你已经了解 Hugo，你也可以从一个模板直接开始： 基于 Git 子模块的快速入门模板 基于 Hugo 模块的快速入门模板 ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:0:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档"],"content":"准备 由于 Hugo 提供的便利性，Hugo 本身是这个主题唯一的依赖。 只需为您的机器（macOS、Linux、Windows、BSD，以及任何可以运行 Go 编译器工具链的机器）安装最新版本的 Hugo 扩展版 (\u003e=0.89.0) 即可。 ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:1:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档"],"content":"创建网站 Hugo 提供了一个 new 命令来创建一个新的网站： hugo new site my_website cd my_website ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:2:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档"],"content":"安装主题 FixIt 主题的仓库 https://github.com/hugo-fixit/FixIt 在当前目录中初始化一个空的 Git 存储库。 将 FixIt 主题克隆到 themes 目录中，将其作为 Git 子模块 添加到您的项目中。 git init git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt 之后，你可以在站点目录通过这条命令来将主题更新至最新版本： git submodule update --remote --merge ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:3:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档"],"content":"基础配置 以下是 FixIt 主题的基本配置： title = \"我的 Hugo FixIt 网站\" baseURL = \"http://example.org/\" # 设置默认的语言 [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"zh-cn\" # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 是否包括中日韩文字 hasCJKLanguage = true # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"FixIt\" [params] # FixIt 主题版本 version = \"0.2.X\" [menu] [[menu.main]] identifier = \"posts\" name = \"文章\" url = \"/posts/\" weight = 1 [[menu.main]] identifier = \"categories\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 2 [[menu.main]] identifier = \"tags\" name = \"标签\" url = \"/tags/\" weight = 3 # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/hugo-fixit/FixIt/issues/43) noClasses = false ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:4:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档"],"content":"添加内容 以下是创建第一篇文章的方法： hugo new posts/first_post.md Hugo 在 content/posts 目录中创建了文章文件。 使用您的编辑器打开它，通过添加一些示例内容并替换文件开头的标题，你可以随意编辑文章。 --- title: 我的第一篇文章 date: 2023-02-20T20:14:22+08:00 draft: true --- 博客（英语：Blog）是一种在线日记型式的个人网站，借由张帖子章、图片或视频来记录生活、抒发情感或分享信息。博客上的文章通常根据张贴时间，以倒序方式由新到旧排列。 This is a tip 一个 技巧 横幅 注意 一个 注意 横幅 摘要 一个 摘要 横幅 信息 一个 信息 横幅 成功 一个 成功 横幅 问题 一个 问题 横幅 警告 一个 警告 横幅 失败 一个 失败 横幅 危险 一个 危险 横幅 Bug 一个 Bug 横幅 示例 一个 示例 横幅 引用 一个 引用 横幅 注意 默认情况下，所有文章和页面均作为草稿创建。如果想要渲染这些页面，请从元数据中删除属性 draft: true, 设置属性 draft: false 或者在以下步骤中为 hugo 命令添加 -D/--buildDrafts 参数。 ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:5:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档"],"content":"启动网站 保存文件后，使用以下命令在本地启动网站： hugo server 信息 当你运行 hugo server 时，当文件内容更改时，页面会随着更改自动刷新。 注意 由于本主题使用了 Hugo 中的 .Scratch 来实现一些特性， 非常建议你为 hugo server 命令添加 --disableFastRender 参数来实时预览你正在编辑的文章页面。 hugo server --disableFastRender 去查看 http://localhost:1313。 完整配置下的预览 ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:6:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档"],"content":"构建网站 当你准备好部署你的网站时，运行以下命令： hugo 会生成一个 public 目录，其中包含你网站的所有静态内容和资源。现在可以将其部署在任何 Web 服务器上。 我们的大多数用户使用 CI/CD 工作流程部署他们的网站，通过推送 1 到他们的 GitHub 或 GitLab 存储库会触发构建和部署。流行的提供商包括 Vercel2、Netlify3、AWS Amplify、CloudCannon、Cloudflare Pages、 GitHub pages 和 GitLab pages。 在 托管和部署 部分了解更多信息。 ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:7:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档"],"content":"寻求帮助 所有的反馈都是欢迎的！详见 议题、讨论 或者加入 QQ 群：403144966。 Git 存储库包含整个项目目录，通常不包括 public 目录，因为站点是在推送后构建的。 ↩︎ 如何使用 Vercel 部署 Hugo 站点 ↩︎ 在 Netlify 上部署 Hugo ↩︎ ","date":"2023-03-15","objectID":"/tutorial/shili-kuaisushangshou/:8:0","tags":["安装","基础"],"title":"快速上手","uri":"/tutorial/shili-kuaisushangshou/"},{"categories":["文档","示例"],"content":"[FixIt 主题提供了一些扩展的语法便于你撰写文章。 ","date":"2023-02-20","objectID":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/:0:0","tags":["安装","基础","拓展"],"title":"Markdown 扩展语法","uri":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/"},{"categories":["文档","示例"],"content":"Emoji 支持 这部分内容在 Emoji 支持页面 中介绍。 ","date":"2023-02-20","objectID":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/:1:0","tags":["安装","基础","拓展"],"title":"Markdown 扩展语法","uri":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/"},{"categories":["文档","示例"],"content":"数学公式 FixIt 基于 KaTeXKATEX 提供数学公式的支持。 在你的 主题配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true 来启用数学公式的自动渲染。 技巧 有一份 KaTeXKATEX 中支持的 TeXTEX 函数 清单。 注意 由于 Hugo 在渲染 Markdown 文档时会根据 _/*/\u003e\u003e 之类的语法生成 HTML 文档， 并且有些转义字符形式的文本内容 (如 \\(/\\)/\\[/\\]/\\\\) 会自动进行转义处理， 因此需要对这些地方进行额外的转义字符表达来实现自动渲染： _ -\u003e \\_ * -\u003e \\* \u003e\u003e -\u003e \\\u003e\u003e \\( -\u003e \\\\( \\) -\u003e \\\\) \\[ -\u003e \\\\[ \\] -\u003e \\\\] \\\\ -\u003e \\\\\\\\ FixIt 主题支持 raw shortcode 以避免这些转义字符， 它可以帮助您编写原始数学公式内容。 一个 raw 示例： \u003cdiv class=\"fi-row\"\u003e行内公式：\\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\)\u003c/div\u003e \u003cdiv class=\"fi-row\"\u003e 公式块： \\[ a=b+c \\\\ d+e=f \\] \u003c/div\u003e 呈现的输出效果如下： 行内公式：\\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\) 公式块： \\[ a=b+c \\\\ d+e=f \\] ","date":"2023-02-20","objectID":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/:2:0","tags":["安装","基础","拓展"],"title":"Markdown 扩展语法","uri":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/"},{"categories":["文档","示例"],"content":"行内公式 默认的行内公式分割符有： $ ... $ \\( ... \\) (转义的: \\\\( ... \\\\)) 例如: $c = \\pm\\sqrt{a^2 + b^2}$ 和 \\\\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\\\) 呈现的输出效果如下： $c = \\pm\\sqrt{a^2 + b^2}$ 和 \\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\) ","date":"2023-02-20","objectID":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/:2:1","tags":["安装","基础","拓展"],"title":"Markdown 扩展语法","uri":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/"},{"categories":["文档","示例"],"content":"公式块 默认的公式块分割符有： $$ ... $$ \\[ ... \\] (转义的：\\\\[ ... \\\\]) \\begin{equation} ... \\end{equation} (不编号的：\\begin{equation*} ... \\end{equation*}) \\begin{align} ... \\end{align} (不编号的：\\begin{align*} ... \\end{align*}) \\begin{alignat} ... \\end{alignat} (不编号的：\\begin{alignat*} ... \\end{alignat*}) \\begin{gather} ... \\end{gather} (不编号的：\\begin{gather*} ... \\end{gather*}) \\begin{CD} ... \\end{CD} 警告 当公式块中存在换行时，请谨慎开启 goldmark.renderer.hardWraps，设置为 true，Goldmark 会将换行符呈现为 \u003cbr\u003e 元素。 例如： $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}\\_{i}=\\mathbf{E}\\_{1}+\\mathbf{E}\\_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\\\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\\\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\\\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\\\u003e\u003e B \\\\\\\\ @VbVV @AAcA \\\\\\\\ C @= D \\end{CD} 呈现的输出效果如下： 失败 ​ 依据警告调整，暂未找到合适方法 技巧 你可以在 主题配置 中自定义行内公式和公式块的分割符。 ","date":"2023-02-20","objectID":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/:2:2","tags":["安装","基础","拓展"],"title":"Markdown 扩展语法","uri":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/"},{"categories":["文档","示例"],"content":"Copy-tex Copy-tex 是一个 KaTeXKATEX 的插件。 通过这个扩展，在选择并复制 KaTeXKATEX 渲染的公式时，会将其 LaTeXLATEX 源代码复制到剪贴板。 在你的 主题配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex。 选择并复制上一节中渲染的公式，可以发现复制的内容为 LaTeX 源代码。 ","date":"2023-02-20","objectID":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/:2:3","tags":["安装","基础","拓展"],"title":"Markdown 扩展语法","uri":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/"},{"categories":["文档","示例"],"content":"mhchem mhchem 是一个 KaTeXKATEX 的插件。 通过这个扩展，你可以在文章中轻松编写漂亮的化学方程式。 在你的 主题配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem。 ","date":"2023-02-20","objectID":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/:2:4","tags":["安装","基础","拓展"],"title":"Markdown 扩展语法","uri":"/tutorial/shili-tuozhanpian/markdown-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/"},{"categories":["文档","示例"],"content":"记录 linux 系统下文件权限相关的内容，Mac OS 下类似。 ","date":"2023-02-20","objectID":"/tutorial/linux-permission/:0:0","tags":["安装","基础","拓展"],"title":"linux 文件权限","uri":"/tutorial/linux-permission/"},{"categories":["文档","示例"],"content":"查看文件权限 查看 linux 系统下的文件权限，可以使用 ll 命令或者 ls 命令 带 -l（长列表选项） ➜ ~ ll total 160 drwx------@ 8 liruihao staff 256B Jul 5 14:47 Applications drwx------@ 10 liruihao staff 320B Jul 27 11:31 Desktop drwx------+ 7 liruihao staff 224B Jun 17 15:01 Documents drwx------@ 22 liruihao staff 704B Jul 29 16:35 Downloads drwx------@ 94 liruihao staff 2.9K Jul 23 19:02 Library drwx------ 4 liruihao staff 128B Nov 13 2021 Movies drwx------+ 6 liruihao staff 192B Nov 18 2021 Music drwx------+ 9 liruihao staff 288B Apr 26 10:25 Pictures drwxr-xr-x+ 5 liruihao staff 160B Nov 14 2021 Public drwxr-xr-x 5 liruihao staff 160B Jul 29 17:48 file-share drwxr-xr-x 3 liruihao staff 96B Jul 26 17:17 node_modules -rw-r--r-- 1 liruihao staff 27B Jun 24 13:47 package-lock.json drwxr-xr-x 20 liruihao staff 640B Jul 29 22:20 workspace -rw-r--r-- 1 liruihao staff 86B Jul 26 17:17 yarn.lock 文件列表信息分为：文件类型、权限、链接数、所属用户、所属用户组、文件大小、最后修改时间、文件名。 ","date":"2023-02-20","objectID":"/tutorial/linux-permission/:1:0","tags":["安装","基础","拓展"],"title":"linux 文件权限","uri":"/tutorial/linux-permission/"},{"categories":["文档","示例"],"content":"文件类型 linux 一共有 7 种文件类型，分别如下： -: 普通文件 d: 目录文件 l: 链接文件 b: 块设备文件 p: 管道文件 c: 字符设备文件 s: 套接口文件/数据接口文件 后四种是特殊文件 ","date":"2023-02-20","objectID":"/tutorial/linux-permission/:2:0","tags":["安装","基础","拓展"],"title":"linux 文件权限","uri":"/tutorial/linux-permission/"},{"categories":["文档","示例"],"content":"文件权限对应关系 权限 含义 对应数字 r 读权限 4 w 写权限 2 x 执行权限 1 读、写、运行三项权限用数字表示就是 r=4,w=2,x=1。所以，-rw-r--r-- 用数字表示成 644。 权限字段 -rwxrwxrwx 的内容总共会有 10 个 -，第一个表示文件类型，如该文件是文件 (-表示），文件夹 (d 表示）, 连接文件 (l 表示），后面 9 个按照每三位为一组分。 drwxr-xr-x 5 liruihao staff 160B Jul 29 17:48 file-share d: 代表文件夹 rwx: 代表文件所有者 (u 表示）权限，这里是 liruihao，liruihao 对该文件拥有读写执行权限。 r-x: 代表所属（g 表示）的权限，这里同组用户拥有对该文件读和执行的权限。 r-x: 代表其他用户（o 表示）的权限，这里和上面权限一样。 ","date":"2023-02-20","objectID":"/tutorial/linux-permission/:3:0","tags":["安装","基础","拓展"],"title":"linux 文件权限","uri":"/tutorial/linux-permission/"},{"categories":null,"content":"Shiqustudio's friends","date":"2021-09-19","objectID":"/friends/","tags":null,"title":"友情鏈接","uri":"/friends/"},{"categories":null,"content":"  Subscribe ours https://shiqustudio.github.io/friends/opml.xml ","date":"2021-09-19","objectID":"/friends/:0:0","tags":null,"title":"友情鏈接","uri":"/friends/"},{"categories":null,"content":"基本資訊 - nickname: 拾趣 avatar: https://shiqustudio.github.io/images/avatar.jpg url: https://shiqustudio.github.io description: 不怕萬人阻擋，只怕自己投降 ","date":"2021-09-19","objectID":"/friends/:1:0","tags":null,"title":"友情鏈接","uri":"/friends/"},{"categories":null,"content":"友情提醒 Notice 互換友鏈請按以上格式在評論留言。（僅限個人非商業部落格/網站）  網站失效、停止維護、內容不當都可能被取消連結！ 那些不尊重他人勞動成果，轉載不加出處的，或惡意行為的網站，還請您不要來進行交換了。 ","date":"2021-09-19","objectID":"/friends/:2:0","tags":null,"title":"友情鏈接","uri":"/friends/"},{"categories":null,"content":" 感谢大家的支持 🙏 给博主买杯卡布奇诺～ 赞赏 支付宝 微信 2018-09-28 francs AliPay ¥50.00 大学生时期，第一次收到别人的支持，内心表示受宠若惊又非常开心。非常感谢老哥的支持！2018-10-26 francs QQ ¥8.80 今天学校运动会没课，睡到 9 点多起来看到 QQ 收到一个红包，感谢支持！2018-11 francs QQ ¥8.802018-12-04 ✘昌升 AliPay ¥10.00 上课的时候听到了支付宝清脆的支付宝到账 10 元的声音！2018-12-04 ✘昌升 AliPay ¥18.00 晚上加了一个 qq 好友，聊天之中又收到支付宝的提示，才知道是谁打赏的，感谢每笔打赏！2019-03-19 ✘昌升 WechatPay ¥2.00 来自 231****047#qq.com2020-01-17 ✘喜洲 QQ ¥20.20 来自 101****0732022-12-02 13:01:48 ✘✘松 AliPay ¥2.002023-02-13 10:01:58 ✘✘波 AliPay ¥20.00 留言：“感谢帮忙解决 FixIt 的问题” Welcome 关于 FixIt 主题 的问题，请移步 FixIt 官网 相关文章哦～ 信息 温馨提示，音乐自动播放，请带好耳机～ From playlist, Powered By mmt-netease ","date":"2021-09-13","objectID":"/guestbook/:0:0","tags":null,"title":"留言","uri":"/guestbook/"},{"categories":null,"content":"資訊 關於我 角色 職業 在校大學生 Web 前端開發 實習生 Web 后端開發 社畜 Web 全棧開發 Web 前端開發 用我所学，学我所用。不盲目堆疊技術棧，保持謙遜，保持探索欲，砥礪前行。 @Lruihao's Recent activity https://github.com/users/Lruihao/projects/1 ","date":"2021-09-07","objectID":"/about/:1:0","tags":null,"title":"關於","uri":"/about/"},{"categories":null,"content":"初衷 建站的初衷不是為了炫耀所知，而是記錄無知。 人知道的越多，就會發現無知的越多。有更廣袤的世界可以探索，真是莫大的快樂！ —— 创建于 2018-05-28 20:01:01 {style=“text-align: right;font-size: 80%;”} ","date":"2021-09-07","objectID":"/about/:2:0","tags":null,"title":"關於","uri":"/about/"},{"categories":null,"content":"期許 不卑不亢，不矜不伐，戒驕戒躁 不嗔不怒，不爭不棄，獨善其身 ","date":"2021-09-07","objectID":"/about/:3:0","tags":null,"title":"關於","uri":"/about/"},{"categories":null,"content":"訂閱 RSS GitHub ","date":"2021-09-07","objectID":"/about/:4:0","tags":null,"title":"關於","uri":"/about/"},{"categories":["Memo","Git"],"content":"备份 hexo 博客 //如果 themes/next（主题文件）下面有。git，请删除这个。git 文件夹。 cd hexo git init //初始化本地仓库 git add source themes scaffolds _config.yml package.json package-lock.json //将必要的文件依次添加 git commit -m \"blog hexo\" git branch hexo //新建 hexo 分支 git checkout hexo //切换到 hexo 分支上 git remote add origin git@github.com:username/username.github.io.git //将本地与 Github 项目对接 git push origin hexo //push 到 Github 项目的 hexo 分支上 ","date":"2018-11-03","objectID":"/blog-backup/:1:0","tags":["hexo","Git","Node"],"title":"hexo 博客源码备份","uri":"/blog-backup/"},{"categories":["Memo","Git"],"content":"在其他终端克隆和更新 hexo 博客 nodejs,git,hexo 已经安装好，即搭建完成 ","date":"2018-11-03","objectID":"/blog-backup/:2:0","tags":["hexo","Git","Node"],"title":"hexo 博客源码备份","uri":"/blog-backup/"},{"categories":["Memo","Git"],"content":"克隆 hexo 博客备份 git clone -b hexo git@github.com:username/username.github.io.git //将 Github 中 hexo 分支 clone 到本地 cd user.github.io npm install //注意，这里一定要切换到刚刚 clone 的文件夹内执行，安装必要的所需组件，不用再 init 这样我们的备份文件就会原封不动的拷贝到本地。 ","date":"2018-11-03","objectID":"/blog-backup/:2:1","tags":["hexo","Git","Node"],"title":"hexo 博客源码备份","uri":"/blog-backup/"},{"categories":["Memo","Git"],"content":"写新文章并备份和部署（备用操作） 其实源码拷下来了，这步不做我们也知道怎么做了，完全没必要按照教程死搬硬套。灵活一点就行了。 //进入 username.github.io 文件夹，应是 hexo 分支 git pull origin hexo //本地和远端的融合 hexo new post \"new post name\" //写新文章 git add source git commit -m \"xxx\" git push origin hexo //备份 hexo d -g //部署 参考 ","date":"2018-11-03","objectID":"/blog-backup/:2:2","tags":["hexo","Git","Node"],"title":"hexo 博客源码备份","uri":"/blog-backup/"},{"categories":["Grocery"],"content":"在线算法 在线算法是指它可以以序列化的方式一个个的处理输入，也就是说在开始时并不需要已经知道所有的输入。 在计算机科学中，一个在线算法是指它可以以序列化的方式一个个的处理输入，也就是说在开始时并不需要已经知道所有的输入。相对的，对于一个离线算法，在开始时就需要知道问题的所有输入数据，而且在解决一个问题后就要立即输出结果。例如，选择排序在排序前就需要知道所有待排序元素，然而插入排序就不必。 因为在线算法并不知道整个的输入，所以它被迫做出的选择最后可能会被证明不是最优的，对在线算法的研究主要集中在当前环境下怎么做出选择。对相同问题的在线算法和离线算法的对比分析形成了以上观点。如果想从其他角度了解在线算法可以看一下流算法（关注精确呈现过去的输入所使用的内存的量），动态算法（关注维护一个在线输入的结果所需要的时间复杂度）和在线机器学习。 一个很好的展示在线算法概念的例子是 加拿大旅行者问题，这个问题的目标是在一个有权图中以最小的代价到达一个目标节点，但这个有权图中有些边是不可靠的可能已经被剔除。然而一个旅行者只有到某个边的一个端点时才能确定该边是否已经被移除了。最坏情况下，该问题会变得简单了，即所有的不确定的边都被移除该问题将会变成通常的最短路径问题。 ","date":"2018-07-26","objectID":"/%E5%9C%A8%E7%BA%BF%E7%A6%BB%E7%BA%BF%E7%AE%97%E6%B3%95/:1:0","tags":["在线离线算法"],"title":"在线离线算法","uri":"/%E5%9C%A8%E7%BA%BF%E7%A6%BB%E7%BA%BF%E7%AE%97%E6%B3%95/"},{"categories":["Grocery"],"content":"离线算法 离线算法 ( off line algorithms)，是指基于在执行算法前输入数据已知的基本假设，也就是说，对于一个离线算法，在开始时就需要知道问题的所有输入数据，而且在解决一个问题后就要立即输出结果。 设计策略 在执行算法前输入已知的基本假设 前提 具有问题完全信息 算法设计策略都是基于在执行算法前输入数据已知的基本假设，也就是说，对于一个离线算法，在开始时就需要知道问题的所有输入数据，而且在解决一个问题后就要立即输出结果，通常将这类具有问题完全信息前提下设计出的算法称为离线算法 ( off line algorithms) ","date":"2018-07-26","objectID":"/%E5%9C%A8%E7%BA%BF%E7%A6%BB%E7%BA%BF%E7%AE%97%E6%B3%95/:2:0","tags":["在线离线算法"],"title":"在线离线算法","uri":"/%E5%9C%A8%E7%BA%BF%E7%A6%BB%E7%BA%BF%E7%AE%97%E6%B3%95/"},{"categories":null,"content":"離線 - 菠菜眾長","date":"0001-01-01","objectID":"/offline/","tags":null,"title":"","uri":"/offline/"}]