{"version":3,"sources":["file:///D:/Hugo/Sites/hugo-blog-0920/themes/FixIt/assets/js/fixit-decryptor.js"],"sourcesContent":["class FixItDecryptor {\r\n  /**\r\n   * FixIt decryptor for encrypted pages and fixit-encryptor shortcode\r\n   * @param {Object} options\r\n   * @param {Function} [options.decrypted] [Lifecycle Hooks] handler after decrypting\r\n   * @param {Function} [options.reset] [Lifecycle Hooks] handler after encrypting again\r\n   * @param {Number} [options.duration=86400] number of seconds to cache decryption statistics. unit: s\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = options || {};\r\n    this.options.duration = this.options.duration || 24 * 60 * 60; // default cache one day\r\n    this.decryptedEventSet = new Set();\r\n    this.partialDecryptedEventSet = new Set();\r\n    this.resetEventSet = new Set();\r\n    customElements.get('fixit-encryptor') || customElements.define('fixit-encryptor', class extends HTMLElement {});\r\n    customElements.get('cipher-text') || customElements.define('cipher-text', class extends HTMLElement {});\r\n  }\r\n\r\n  /**\r\n   * decrypt content\r\n   * @param {Element} $cipherText cipher text element\r\n   * @param {Element} $target target content element\r\n   * @param {String} salt salt string\r\n   */\r\n  #decryptContent($cipherText, $target, salt) {\r\n    try {\r\n      $target.innerHTML = CryptoJS.enc.Base64\r\n        .parse($cipherText.innerText.replace(salt, ''))\r\n        .toString(CryptoJS.enc.Utf8);\r\n      $cipherText.parentElement.classList.add('decrypted');\r\n    } catch (err) {\r\n      return console.error(err);\r\n    }\r\n    // decrypted hook\r\n    const eventSet = $target.id === 'content' ? this.decryptedEventSet : this.partialDecryptedEventSet;\r\n    for (const event of eventSet) {\r\n      event($target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * validate password\r\n   * @param {Element} $encryptor fixit-encryptor element\r\n   * @param {Function} callback callback function after password validation\r\n   * @returns \r\n   */\r\n  async #validatePassword($encryptor, callback) {\r\n    const $cipherText = $encryptor.querySelector('cipher-text');\r\n    const password = $cipherText.dataset.password;\r\n    const inputEl = $encryptor.querySelector('.fixit-decryptor-input');\r\n    const input = inputEl.value.trim();\r\n    // Warning: insufficient-password-hash Weak hashing algorithms for passwords poses security risks.\r\n    const { h64ToString } = await xxhash();\r\n    const inputHash = h64ToString(input);\r\n    const inputSha256 = CryptoJS.SHA256(input).toString();\r\n    const saltLen = input.length % 2 ? input.length : input.length + 1;\r\n\r\n    inputEl.value = '';\r\n    inputEl.blur();\r\n    if (!input) {\r\n      alert('Please enter the correct password!');\r\n      return console.warn('Please enter the correct password!');\r\n    }\r\n    if (inputHash !== password) {\r\n      alert(`Password error: ${input} not the correct password!`);\r\n      return console.warn(`Password error: ${input} not the correct password!`);\r\n    }\r\n    callback($cipherText, inputHash, inputSha256.slice(saltLen));\r\n  }\r\n\r\n  /**\r\n   * initialize FixIt decryptor\r\n   * @param {Object} options\r\n   * @param {Boolean} options.all whether to decrypt all content\r\n   * @param {String} options.shortcode whether to decrypt fixit-encryptor shortcode\r\n   */\r\n  init({ all, shortcode }) {\r\n    this.addEventListener('decrypted', this.options?.decrypted);\r\n    this.addEventListener('partial-decrypted', this.options?.partialDecrypted);\r\n    this.addEventListener('reset', this.options?.reset);\r\n    const $content = document.querySelector('#content');\r\n    if (shortcode) {\r\n      this.addEventListener('decrypted', () =\u003e {\r\n        this.initShortcodes($content);\r\n      });\r\n      this.addEventListener('partial-decrypted', ($parent) =\u003e {\r\n        this.initShortcodes($parent);\r\n      });\r\n    }\r\n    if (all) {\r\n      this.initPage();\r\n    } else if (shortcode) {\r\n      this.initShortcodes($content);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * initialize FixIt decryptor for the encrypted pages\r\n   */\r\n  initPage() {\r\n    this.validateCache();\r\n    const $encryptor = document.querySelector('article \u003e fixit-encryptor');\r\n    const $content = document.querySelector('#content');\r\n\r\n    const decryptorHandler = () =\u003e {\r\n      this.#validatePassword($encryptor, ($cipherText, passwordHash, salt) =\u003e {\r\n        // cache decryption statistics\r\n        window.localStorage?.setItem(\r\n          `fixit-decryptor/#${location.pathname}`,\r\n          JSON.stringify({\r\n            expiration: Math.ceil(Date.now() / 1000) + this.options.duration,\r\n            password: passwordHash,\r\n            salt,\r\n          })\r\n        );\r\n        this.#decryptContent($cipherText, $content, salt);\r\n      });\r\n    };\r\n\r\n    // bind decryptor input enter keydown event\r\n    $encryptor.querySelector('.fixit-decryptor-input')?.addEventListener('keydown', (e) =\u003e {\r\n      if (e.key === 'Enter') {\r\n        e.preventDefault();\r\n        decryptorHandler();\r\n      }\r\n    });\r\n\r\n    // bind decryptor button click event\r\n    $encryptor.querySelector('.fixit-decryptor-btn')?.addEventListener('click', (e) =\u003e {\r\n      e.preventDefault();\r\n      decryptorHandler();\r\n    });\r\n\r\n    // bind encryptor button click event\r\n    $encryptor.querySelector('.fixit-encryptor-btn')?.addEventListener('click', (e) =\u003e {\r\n      e.preventDefault();\r\n      $encryptor.classList.remove('decrypted');\r\n      $content.innerHTML = '';\r\n      window.localStorage?.removeItem(`fixit-decryptor/#${location.pathname}`);\r\n      // reset hook\r\n      for (const event of this.resetEventSet) {\r\n        event();\r\n      }\r\n    });\r\n\r\n    $encryptor.classList.add('initialized');\r\n  }\r\n\r\n  /**\r\n   * initialize FixIt decryptor for fixit-encryptor shortcodes\r\n   * @param {Element} $parent parent element\r\n   */\r\n  initShortcodes($parent) {\r\n    const $shortcodes = $parent.querySelectorAll('fixit-encryptor:not(.initialized)');\r\n\r\n    $shortcodes.forEach($shortcode =\u003e {\r\n      const decryptorHandler = () =\u003e {\r\n        const $content = $shortcode.querySelector('.decryptor-content');\r\n        this.#validatePassword($shortcode, ($cipherText, passwordHash, salt) =\u003e {\r\n          this.#decryptContent($cipherText, $content, salt);\r\n        });\r\n      };\r\n\r\n      // bind decryptor input enter keydown event\r\n      $shortcode.querySelector('.fixit-decryptor-input')?.addEventListener('keydown', function (e) {\r\n        if (e.key === 'Enter') {\r\n          e.preventDefault();\r\n          decryptorHandler();\r\n        }\r\n      });\r\n\r\n      // bind decryptor button click event\r\n      $shortcode.querySelector('.fixit-decryptor-btn')?.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        decryptorHandler();\r\n      });\r\n\r\n      $shortcode.classList.add('initialized');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * validate the cached decryption statistics in localStorage\r\n   * @returns {FixItDecryptor}\r\n   */\r\n  validateCache() {\r\n    const $content = document.querySelector('#content');\r\n    const $encryptor = document.querySelector('article \u003e fixit-encryptor');\r\n    const $cipherText = $encryptor.querySelector('cipher-text');\r\n    const password = $cipherText.dataset.password;\r\n    const cachedStat = JSON.parse(window.localStorage?.getItem(`fixit-decryptor/#${location.pathname}`));\r\n\r\n    if (!cachedStat || cachedStat?.password !== password || Number(cachedStat?.expiration) \u003c Math.ceil(Date.now() / 1000)) {\r\n      if (cachedStat) {\r\n        window.localStorage?.removeItem(`fixit-decryptor/#${location.pathname}`);\r\n        console.warn('The password has expired, please re-enter!');\r\n      }\r\n      return this;\r\n    }\r\n    this.#decryptContent($cipherText, $content, cachedStat.salt);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * add event listener for FixIt Decryptor\r\n   * @param {String} event event name\r\n   * @param {Function} listener event handler\r\n   * @returns {FixItDecryptor}\r\n   */\r\n  addEventListener(event, listener) {\r\n    if (typeof listener !== 'function') {\r\n      return this;\r\n    }\r\n    switch (event) {\r\n      case 'decrypted':\r\n        this.decryptedEventSet.add(listener);\r\n        break;\r\n      case 'partial-decrypted':\r\n        this.partialDecryptedEventSet.add(listener);\r\n        break;\r\n      case 'reset':\r\n        this.resetEventSet.add(listener);\r\n        break;\r\n      default:\r\n        console.warn(`Event ${event} not found in FixIt Decryptor!`);\r\n        break;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * remove event listener for FixIt Decryptor\r\n   * @param {String} event event name\r\n   * @param {Function} listener event handler\r\n   * @returns {FixItDecryptor}\r\n   */\r\n  removeEventListener(event, listener) {\r\n    if (typeof listener !== 'function') {\r\n      return this;\r\n    }\r\n    switch (event) {\r\n      case 'decrypted':\r\n        this.decryptedEventSet.delete(listener);\r\n        break;\r\n      case 'partial-decrypted':\r\n        this.partialDecryptedEventSet.delete(listener);\r\n        break;\r\n      case 'reset':\r\n        this.resetEventSet.delete(listener);\r\n        break;\r\n      default:\r\n        console.warn(`Event ${event} not found in FixIt Decryptor!`);\r\n        break;\r\n    }\r\n    return this;\r\n  }\r\n}\r\n\r\nwindow.FixItDecryptor = FixItDecryptor;\r\n\r\n"],"mappings":"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","names":[]}