<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>windows - 标签 - 我的 Hugo FixIt 网站</title>
    <link>http://localhost:1313/tags/windows/</link>
    <description>windows - 标签 - 我的 Hugo FixIt 网站</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 12 Jul 2019 18:44:36 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/windows/" rel="self" type="application/rss+xml" /><item>
  <title>WAMPServer 自定义网站根目录等设置</title>
  <link>http://localhost:1313/wamproot/</link>
  <pubDate>Fri, 12 Jul 2019 18:44:36 &#43;0000</pubDate>
  <author>xucong</author>
  <guid>http://localhost:1313/wamproot/</guid>
  <description><![CDATA[<blockquote>
<p>使用 WAMPServer 时自定义网站根目录。</p>
</blockquote>
<h2 id="wampserver-自定义网站根目录">WAMPServer 自定义网站根目录</h2>
<h3 id="修改-apache-配置文件">修改 apache 配置文件</h3>
<p>打开<code>httpd.conf</code>文件搜索<code>documentroot</code>后，找到路径修改为自定义的。<br>
</p>
<p>再打开<code>httpd-vhost.conf</code>文件修改对应的路径。<br>
<code>修改完配置文件需要重启所有服务！</code></p>
<h3 id="修改-wampmanager-文件">修改 wampmanager 文件</h3>
<p>在 wampserver 安装路径根目录知道<code>wampmanager.ini</code>和<code>wampmanager.tpl</code>两个文件。搜索<code>menu.left</code>, 然后也修改为自定义的路径。
<code>然后退出，重启软件！</code></p>
<p><br>
</p>
<h3 id="编写-php-文件测试">编写 php 文件测试</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">	<span class="k">echo</span> <span class="s2">&#34;hello world&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<h2 id="wampserver-多站点配置">WAMPServer 多站点配置</h2>
<p>打开<code>httpd-vhost.conf</code>文件，复制原有的几行配置文件，粘贴修改路径和域名等配置。比如</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## Virtual Hosts
</span></span><span class="line"><span class="cl">#
</span></span><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">  ServerName localhost
</span></span><span class="line"><span class="cl">  ServerAlias localhost
</span></span><span class="line"><span class="cl">  DocumentRoot &#34;g:/Demo&#34;
</span></span><span class="line"><span class="cl">  &lt;Directory &#34;g:/Demo&#34;&gt;
</span></span><span class="line"><span class="cl">    Options +Indexes +Includes +FollowSymLinks +MultiViews
</span></span><span class="line"><span class="cl">    AllowOverride All
</span></span><span class="line"><span class="cl">    Require local
</span></span><span class="line"><span class="cl">  &lt;/Directory&gt;
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">  ServerName test01.com
</span></span><span class="line"><span class="cl">  DocumentRoot &#34;g:/Demo/test01&#34;
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;VirtualHost *:80&gt;
</span></span><span class="line"><span class="cl">  ServerName test02.com
</span></span><span class="line"><span class="cl">  DocumentRoot &#34;g:/Demo/test02&#34;
</span></span><span class="line"><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>再打开<code>C:\Windows\System32\drivers\etc\hosts</code>文件，在文件最后添加类似于云服务器的域名解析，进行本地域名解析，当输入域名时优先从本地申请资源。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">## For example:
</span></span><span class="line"><span class="cl">#
</span></span><span class="line"><span class="cl">## 102.54.94.97 rhino.acme.com ## source server
</span></span><span class="line"><span class="cl">## 38.25.63.10 x.acme.com ## x client host
</span></span><span class="line"><span class="cl">## localhost name resolution is handled within DNS itself.
</span></span><span class="line"><span class="cl">#	127.0.0.1 localhost
</span></span><span class="line"><span class="cl">#	::1 localhost
</span></span><span class="line"><span class="cl">127.0.0.1 steamcommunity.com
</span></span><span class="line"><span class="cl">192.168.28.1 windows10.microdone.cn
</span></span><span class="line"><span class="cl">127.0.0.1 localhost
</span></span><span class="line"><span class="cl">::1 localhost
</span></span><span class="line"><span class="cl">127.0.0.1 test01.com
</span></span><span class="line"><span class="cl">127.0.0.1 test02.com
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="wampserver-自拟定端口">WAMPServer 自拟定端口</h2>
<p>WAMP 服务我安装了好几次，每次因为修改配置文件搞崩了。第一次装的时候发现 80 端口被占用了，因为以前玩了一下 Windows 的 IIS，暂停 IIS 的网站，再使用命令或者直接在控制面板关掉就好了。</p>
<ol>
<li>如果不使用 80 多为默认端口，比如修改为 8080，还是在<code>httpd.conf</code>文件里修改。搜索<code>80</code>都改成<code>8080</code>然后，Ctrl+S 保存，重新启动 WampServer<br>
在浏览器地址栏输入<code>localhost:8000</code></li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#监听端口
</span></span><span class="line"><span class="cl">Listen 0.0.0.0:8080
</span></span><span class="line"><span class="cl">Listen [::0]:8080
</span></span><span class="line"><span class="cl">ServerName localhost:8080
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>使用 Notepad++打开 C:\wamp 目录下的 wampmanager.ini 和 wampmanager.tpl<br>
Ctrl+F 查找 <code>localhost</code><br>
将其全部替换为<code>localhost:8000</code><br>
然后，Ctrl+S 保存，重新启动 WampServer</li>
</ol>]]></description>
</item>
<item>
  <title>ubuntu &#43; windows 双系统默认启动项设置</title>
  <link>http://localhost:1313/windefault/</link>
  <pubDate>Thu, 21 Mar 2019 12:48:30 &#43;0000</pubDate>
  <author>xucong</author>
  <guid>http://localhost:1313/windefault/</guid>
  <description><![CDATA[<div class="featured-image">
        <img src="/posts/windefault/images/1.png" referrerpolicy="no-referrer">
      </div><blockquote>
<p>双系统默认启动项是 Ubuntu，而日常使用最多的还是 Windows，所以说很不方便，一不小心就开机到 Ubuntu 去了。今天来设置一下。</p>
</blockquote>
<h2 id="修改etcdefaultgrub文件">修改<code>/etc/default/grub</code>文件</h2>
<blockquote>
<p>同时按住键盘上的“Ctrl Alt T”三个键（即快捷键“Ctrl+Alt+T”），打开终端窗口。在终端内输入 sudo gedit /etc/default/grub 按 Enter 键确认，提示输入用户密码，输入的用户密码是看不见的，不要管它，输入完成确认即可打开 grub 文件。</p>
</blockquote>
<p></p>
<blockquote>
<p>把 grub 文件中的 <code>GRUB_DEFAULT=0</code> 中的 0 改为 <code>saved</code>, 把 <code>GRUB_TIMEOUT=10</code> 中的 10 改为 5。（这里的 5 表示开机时等待选择操作系统是时间是 5 秒）<br>
在文件末尾添加 <code>GRUB_SAVEDEFAULT=true</code>后保存文件并退出。</p>
</blockquote>
<p></p>
<h2 id="更新启动配置文件">更新启动配置文件</h2>
<blockquote>
<p>在终端输入 sudo update-grub 按 Enter 键确认</p>
</blockquote>
<p></p>
<h2 id="重启">重启</h2>
<p><code>sudo reboot</code>或者点击重启，重启到启动菜单时，选择你要更改为默认启动项的系统，按 Enter 键确认启动即可，下次启动时刚刚选择的系统即为默认启动系统，直到你手动选择启动其他的系统为止。以后可以轻松的来回切换默认系统了。</p>]]></description>
</item>
<item>
  <title>win10,ubuntu 双系统时间不一致</title>
  <link>http://localhost:1313/ubuntutime/</link>
  <pubDate>Fri, 15 Mar 2019 14:28:10 &#43;0000</pubDate>
  <author>xucong</author>
  <guid>http://localhost:1313/ubuntutime/</guid>
  <description><![CDATA[<blockquote>
<p>我的 Ubuntu 和 Windows 双系统是 Ubuntu 是第一启动项，所以总是开机忘记点下键，一进 Ubuntu 系统时间就不对了（总是少了 8 小时），回到 Windows 时间也是错的。知道是错的调整一下还好。忘记调了有时候真的会误事。比如说 git 版本控制提交会遇到问题种种等。</p>
</blockquote>
<h2 id="原因">原因</h2>
<p>在安装 Ubuntu 和 Windows 双系统的情况下，Ubuntu 的时间总会和 Windows 的时间相差 8 小时，原因在于 widows 认为 BIOS 时间是本地时间，Ubuntu 认为 BIOS 时间是 UTC 时间，即协调世界时，(Universal Time Coordinated) 英文缩写，是由国际无线电咨询委员会规定和推荐，并由国际时间局 (BIH) 负责保持的以秒为基础的时间标度。UTC 相当于本初子午线（即经度 0 度）上的平均太阳时，过去曾用格林威治平均时 (GMT) 来表示。北京时间比 UTC 时间早 8 小时，以 1999 年 1 月 1 日 00:00 UTC 为例，UTC 时间是零点，北京时间为 1999 年 1 月 1 日早上 8 点整。)，所以我们在时间上面相隔了 8 个小时。这个时候 bios 的时间和系统的时间当然是不一致，一个代表 utc 时间，一个代表 cst（＋ 8 时区），即我们常用的时间。</p>
<h2 id="方法一">方法一</h2>
<p>在 Windows 下 进行如下修改：（博主 win10,win7 自测）<br>
以管理员身份运行 CMD（<code>win+x 后选择 Windows Powershell（管理员）</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1
</span></span></code></pre></td></tr></table>
</div>
</div><p>重启看看时间发现 ok 了。</p>
<h2 id="方法二">方法二</h2>
<p>老版 Ubuntu（Ubuntu10 左右）：<br>
修改 <code>/etc/default/rcS</code> 文件<br>
编辑 <code>/etc/default/rcS</code> 将 <code>UTC=yes</code>改成 <code>UTC=no</code> 。</p>
<p>新版 Ubuntu（Ubuntu16.04）：
新版本的 Ubuntu 使用 systemd 启动之后，时间也改成了由 timedatectl 来管理，此方法就不适用了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$sudo timedatectl set-local-rtc 1
</span></span></code></pre></td></tr></table>
</div>
</div><p>先在 ubuntu 下更新一下时间，确保时间无误：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$sudo apt-get install ntpdate
</span></span><span class="line"><span class="cl">$sudo ntpdate time.windows.com
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后将时间更新到硬件上：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$sudo hwclock --localtime --systohc
</span></span></code></pre></td></tr></table>
</div>
</div><p>重新进入 windows10，发现时间恢复正常了！</p>]]></description>
</item>
<item>
  <title>windows 上搭建 web 服务器</title>
  <link>http://localhost:1313/web-server-win/</link>
  <pubDate>Fri, 26 Oct 2018 21:56:18 &#43;0000</pubDate>
  <author>xucong</author>
  <guid>http://localhost:1313/web-server-win/</guid>
  <description><![CDATA[<blockquote>
<p>我用的 win10</p>
</blockquote>
<h3 id="打开控制面板">打开控制面板</h3>
<p>选择并进入“程序”，双击“启用或关闭 Windows 服务”，在弹出的窗口中选择“Internet Information Services”下面所有地选项，点击确定后，开始更新服务。<br>
<figure><a class="lightgallery" href="/web-server-win/images/1.png" data-thumbnail="/web-server-win/images/1.png" data-sub-html="<h2>打开控制面板</h2><p>打开控制面板</p>"></a><figcaption class="image-caption">打开控制面板</figcaption>
  </figure></p>
<h3 id="查看">查看</h3>
<p>更新完成后，打开浏览器，输入<code>http://localhost</code>或者<code>127.0.0.1</code>回车，如果此时出现 IIS7 欢迎界面，说明 Web 服务器已经搭建成功。<br>
<figure><a class="lightgallery" href="/web-server-win/images/2.png" data-thumbnail="/web-server-win/images/2.png" data-sub-html="<h2>查看</h2><p>查看</p>"></a><figcaption class="image-caption">查看</figcaption>
  </figure></p>
<h3 id="网站设置">网站设置</h3>
<p>当 web 服务器搭建成功后，我们下一步所要做的就是把我们开发的网站安装到 Web 服务器的目录中。一般情况下，当 Web 服务器安装完成后，会创建路径<code>%系统根目录%inetpub/wwwroot</code>，将我们开发的网站 COPY 到该路径下。即可实现本地访问该网站。<br>
</p>
<p>也可以更改根目录，搜索 IIS，点击网站，Default Web Site，基本设置修改物理路径（<strong>默认站点名称不要改</strong>）<br>
我这里改到了 hexo 的 public 相当于 hexo 部署在本地服务器<code>58.45.227.225</code><br>
<figure><a class="lightgallery" href="/web-server-win/images/5.png" data-thumbnail="/web-server-win/images/5.png" data-sub-html="<h2>/web-server-win/images/5.png</h2><p>网站设置 1</p>"></a><figcaption class="image-caption"></figcaption>
  </figure>
<figure><a class="lightgallery" href="/web-server-win/images/6.png" data-thumbnail="/web-server-win/images/6.png" data-sub-html="<h2>/web-server-win/images/6.png</h2><p>网站设置 2</p>"></a><figcaption class="image-caption"></figcaption>
  </figure>
<figure><a class="lightgallery" href="/web-server-win/images/7.png" data-thumbnail="/web-server-win/images/7.png" data-sub-html="<h2>/web-server-win/images/7.png</h2><p>网站设置 3</p>"></a><figcaption class="image-caption"></figcaption>
  </figure></p>
<h3 id="设置防火墙">设置防火墙</h3>
<p>让局域网当其它计算机也能访问本地网站资源。具体方法：打开控制面板，选择“系统和安全”，点击“允许程序通过 Windows 防火墙”，在弹出的对话框中勾选“万维网服务 HTTP”右侧的两个复选框，最后点击确定退出。<br>
<figure><a class="lightgallery" href="/web-server-win/images/4.png" data-thumbnail="/web-server-win/images/4.png" data-sub-html="<h2>/web-server-win/images/4.png</h2><p>设置防火墙</p>"></a><figcaption class="image-caption"></figcaption>
  </figure></p>
<p>在局域网中其它计算机上，打开浏览器就可以通过你电脑的 ip 地址访问了（手机也可以）<br>
本地 ip 可以通过 cmd 用 ipconfig 查看</p>
]]></description>
</item>
</channel>
</rss>
