<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>numpy - 标签 - 我的 Hugo FixIt 网站</title>
    <link>http://localhost:1313/tags/numpy/</link>
    <description>numpy - 标签 - 我的 Hugo FixIt 网站</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 27 Apr 2019 14:16:54 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/numpy/" rel="self" type="application/rss+xml" /><item>
  <title>用 MyQR 制作专属动态二维码 (py 和 exe 版本）</title>
  <link>http://localhost:1313/qrcode/</link>
  <pubDate>Sat, 27 Apr 2019 14:16:54 &#43;0000</pubDate>
  <author>xucong</author>
  <guid>http://localhost:1313/qrcode/</guid>
  <description><![CDATA[<blockquote>
<p><strong>Python 二维码生成器</strong>是 github 上@sylnsfar 开源的一个 python 生成二维码工具。有 python, 网页及 exe 版本，详见 <a href="https://github.com/sylnsfar/qrcode/"target="_blank" rel="external nofollow noopener noreferrer">sylnsfar/qrcode</a>，本文主要介绍记录一下 python 版本使用。exe 可以去 <a href="https://github.com/sylnsfar/qrcode_win"target="_blank" rel="external nofollow noopener noreferrer">项目开源地址</a> 下载，公众号文章后台回复关键词“qrcode”获取链接。</p>
</blockquote>
<p>可生成<em>普通二维码</em>、<em>带图片的艺术二维码（黑白与彩色）</em>、<em>动态二维码（黑白与彩色）</em>。</p>
<h2 id="示例">示例</h2>
<div class="text-center">
<p>
</p>
</div>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">MyQR</span> <span class="kn">import</span> <span class="n">myqr</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="n">version</span><span class="p">,</span> <span class="n">level</span><span class="p">,</span> <span class="n">qr_name</span> <span class="o">=</span> <span class="n">myqr</span><span class="o">.</span><span class="n">run</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">words</span><span class="o">=</span><span class="s1">&#39;https://lruihao.cn&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">version</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">level</span><span class="o">=</span><span class="s1">&#39;H&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">picture</span><span class="o">=</span><span class="s1">&#39;2.jpg&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">colorized</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">contrast</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">brightness</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">save_name</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">save_dir</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># help(myqr)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># https://github.com/sylnsfar/qrcode/</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">Positional parameter
</span></span></span><span class="line"><span class="cl"><span class="s1">   words: str # 链接或者文字
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">Optional parameters
</span></span></span><span class="line"><span class="cl"><span class="s1">   version: int, from 1 to 40  # 控制边长
</span></span></span><span class="line"><span class="cl"><span class="s1">   level: str, just one of (&#39;L&#39;,&#39;M&#39;,&#39;Q&#39;,&#39;H&#39;) # 控制纠错水平，从左到右依次升高。
</span></span></span><span class="line"><span class="cl"><span class="s1">   picutre: str, a filename of a image # 图片，需在同路径，默认 None
</span></span></span><span class="line"><span class="cl"><span class="s1">   colorized: bool  # 是否彩色 默认 False
</span></span></span><span class="line"><span class="cl"><span class="s1">   constrast: float # 对比度 默认 1.0
</span></span></span><span class="line"><span class="cl"><span class="s1">   brightness: float # 亮度 默认 1.0
</span></span></span><span class="line"><span class="cl"><span class="s1">   save_name: str, the output filename like &#39;example.png&#39; #控制文件名，默认 None,&#39;qrcode.png&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">   save_dir: str, the output directory # 储存路径
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="安装">安装</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 通过 pip</span>
</span></span><span class="line"><span class="cl"><span class="n">pip</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="n">install</span> <span class="n">myqr</span><span class="p">(</span><span class="ow">or</span> <span class="n">MyQR</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="使用方法">使用方法</h2>
<h3 id="命令行方式">命令行方式</h3>
<p><em>（<strong>提示</strong>：如果你尚未安装 <a href="https://pypi.python.org/pypi/MyQR"target="_blank" rel="external nofollow noopener noreferrer"><strong>MyQR</strong></a> ，以下内容请使用<code>python(3) myqr.py</code> 而非<code>myqr</code> 。）</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 概括</span>
</span></span><span class="line"><span class="cl"><span class="n">myqr</span> 	<span class="n">Words</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="o">-</span><span class="n">v</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="o">...</span><span class="p">,</span><span class="mi">40</span><span class="p">}]</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="o">-</span><span class="n">l</span> <span class="p">{</span><span class="n">L</span><span class="p">,</span><span class="n">M</span><span class="p">,</span><span class="n">Q</span><span class="p">,</span><span class="n">H</span><span class="p">}]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="o">-</span><span class="n">n</span> <span class="n">output</span><span class="o">-</span><span class="n">filename</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="o">-</span><span class="n">d</span> <span class="n">output</span><span class="o">-</span><span class="n">directory</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="o">-</span><span class="n">p</span> <span class="n">picture_file</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="o">-</span><span class="n">c</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="o">-</span><span class="n">con</span> <span class="n">contrast</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="o">-</span><span class="n">bri</span> <span class="n">brightness</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>普通二维码 介绍了 <code>Words</code>, <code>-v</code>, <code>-l</code>, <code>-n</code>, <code>-d</code></li>
<li>艺术二维码 介绍了 <code>-p</code>, <code>-c</code>, <code>-con</code>, <code>-bri</code></li>
<li>动态 GIF 二维码 介绍了动态的生成方法和注意点</li>
</ul>
<h4 id="普通二维码">普通二维码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl"><span class="gh">#1 Words
</span></span></span><span class="line"><span class="cl"><span class="gh"></span>myqr https://github.com
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>在命令后输入链接或者句子作为参数，然后在程序的当前目录中产生相应的二维码图片文件，默认命名为 “qrcode.png”。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl"><span class="gh">#2 -v, -l
</span></span></span><span class="line"><span class="cl"><span class="gh"></span>myqr https://github.com -v 10 -l Q
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p><strong>默认边长</strong>是取决于你输入的信息的长度和使用的纠错等级；</p>
<p>而<strong>默认纠错等级</strong>是最高级的 H。</p>
</li>
<li>
<p><strong>自定义</strong>：如果想要控制边长和纠错水平就使用 <code>-v</code> 和 <code>-l</code> 参数。</p>
<p><code>-v</code> 控制边长，范围是** 1 至 40**，数字越大边长越大；</p>
<p><code>-l</code> 控制纠错水平，范围是** L、M、Q、H**，从左到右依次升高。</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl"><span class="gh">#3 -n, -d
</span></span></span><span class="line"><span class="cl"><span class="gh"></span>myqr https://github.com -n github_qr.jpg -d .../paths/
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p><strong>默认输出文件名</strong>是“ qrcode.png &ldquo;，而<strong>默认存储位置</strong>是当前目录。</p>
</li>
<li>
<p>自定义：可以自己定义输出名称和位置。<strong>注意</strong>同名文件会覆盖旧的。</p>
<p><code>-n</code> 控制文件名，格式可以是 <code>.jpg</code>， <code>.png</code> ，<code>.bmp</code> ，<code>.gif</code> ；</p>
<p><code>-d</code> 控制位置。</p>
</li>
</ul>
<h4 id="艺术二维码">艺术二维码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl"><span class="gh">#1 -p
</span></span></span><span class="line"><span class="cl"><span class="gh"></span>myqr https://github.com -p github.jpg
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>参数<code>-p</code> 用来将 QR 二维码图像与一张同目录下的图片相结合，产生一张<strong>黑白</strong>图片。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl"><span class="gh">#2 -c
</span></span></span><span class="line"><span class="cl"><span class="gh"></span>myqr https://github.com -p github.jpg -c
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>加上参数 <code>-c</code> 可以使产生的图片由黑白变为<strong>彩色</strong>的。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl"><span class="gh">#3 -con, -bri
</span></span></span><span class="line"><span class="cl"><span class="gh"></span>myqr https://github.com -p github.jpg [-c] -con 1.5 -bri 1.6
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>参数<code>-con</code> 用以调节图片的<strong>对比度</strong>，1.0 表示原始图片，更小的值表示更低对比度，更大反之。<strong>默认为 1.0</strong>。</p>
</li>
<li>
<p>参数 <code>-bri</code> 用来调节图片的<strong>亮度</strong>，其余用法和取值与 <code>-con</code> 相同。</p>
</li>
</ul>
<h4 id="动态-gif-二维码">动态 GIF 二维码</h4>
<p>动态二维码与上述的带图片的二维码的生成方法没什么区别，你只要采用 <code>.gif</code> 格式的图片即可生成黑白或者彩色的动态二维码。但<strong>注意</strong>如果使用了 <code>-n</code> 参数自定义输出的文件名，切记其格式也必须是 <code>.gif</code> 格式。</p>
<h3 id="作为导入文件">作为导入文件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 安装模块后</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">MyQR</span> <span class="kn">import</span> <span class="n">myqr</span>
</span></span><span class="line"><span class="cl"><span class="n">version</span><span class="p">,</span> <span class="n">level</span><span class="p">,</span> <span class="n">qr_name</span> <span class="o">=</span> <span class="n">myqr</span><span class="o">.</span><span class="n">run</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="n">words</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">version</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">level</span><span class="o">=</span><span class="s1">&#39;H&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">picture</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">colorized</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">contrast</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">brightness</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">save_name</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">save_dir</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><em>以下各个参数已经在<strong>上文命令行方式</strong>有所介绍</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># help(myqr)</span>
</span></span><span class="line"><span class="cl"><span class="n">Positional</span> <span class="n">parameter</span>
</span></span><span class="line"><span class="cl">   <span class="n">words</span><span class="p">:</span> <span class="nb">str</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Optional</span> <span class="n">parameters</span>
</span></span><span class="line"><span class="cl">   <span class="n">version</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="kn">from</span> <span class="mi">1</span> <span class="n">to</span> <span class="mi">40</span>
</span></span><span class="line"><span class="cl">   <span class="n">level</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">just</span> <span class="n">one</span> <span class="n">of</span> <span class="p">(</span><span class="s1">&#39;L&#39;</span><span class="p">,</span><span class="s1">&#39;M&#39;</span><span class="p">,</span><span class="s1">&#39;Q&#39;</span><span class="p">,</span><span class="s1">&#39;H&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="n">picutre</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">a</span> <span class="n">filename</span> <span class="n">of</span> <span class="n">a</span> <span class="n">image</span>
</span></span><span class="line"><span class="cl">   <span class="n">colorized</span><span class="p">:</span> <span class="nb">bool</span>
</span></span><span class="line"><span class="cl">   <span class="n">constrast</span><span class="p">:</span> <span class="nb">float</span>
</span></span><span class="line"><span class="cl">   <span class="n">brightness</span><span class="p">:</span> <span class="nb">float</span>
</span></span><span class="line"><span class="cl">   <span class="n">save_name</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">the</span> <span class="n">output</span> <span class="n">filename</span> <span class="n">like</span> <span class="s1">&#39;example.png&#39;</span>
</span></span><span class="line"><span class="cl">   <span class="n">save_dir</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">the</span> <span class="n">output</span> <span class="n">directory</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="使用提示">使用提示</h2>
<ul>
<li>
<p>请采用<strong>正方形</strong>或近似正方形的图片</p>
</li>
<li>
<p>建议在图片尺寸大的时候使用 <code>-v</code> 的值也应该<strong>适当</strong>变大。</p>
</li>
</ul>
<h2 id="可用字符">可用字符</h2>
<ul>
<li>
<p>数字 0 到 9</p>
</li>
<li>
<p>大小写的英文字母</p>
</li>
<li>
<p>常用<strong>英文标点符号</strong>和空格</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="go">· , . : ; + - * / \ ~ ! @ # $ % ^ &amp; ` &#39; = &lt; &gt; [ ] ( ) ? _ { } | and  (space)
</span></span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h2 id="依赖库">依赖库</h2>
<ul>
<li><a href="https://pypi.python.org/pypi/Pillow/3.3.1"target="_blank" rel="external nofollow noopener noreferrer">pillow</a></li>
<li><a href="https://pypi.python.org/pypi/numpy"target="_blank" rel="external nofollow noopener noreferrer">numpy</a></li>
<li><a href="https://pypi.python.org/pypi/imageio"target="_blank" rel="external nofollow noopener noreferrer">imageio</a></li>
</ul>
<h2 id="运行环境">运行环境</h2>
<ul>
<li>Linux, Python 3</li>
<li>Windows, Python 3</li>
<li>Mac, Python 3</li>
</ul>]]></description>
</item>
</channel>
</rss>
